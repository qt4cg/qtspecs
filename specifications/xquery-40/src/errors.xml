<?xml version="1.0" encoding="UTF-8"?>
<div1 id="id-errors">
   <head>Error Conditions</head>
   
   <note><p>Historically, codes starting "XP" were for XPath errors, "XQ" for XQuery errors.
   This was followed by "ST" for static errors, "TY" for type errors, or "DY" for dynamic
   errors. Over time, some errors have been reclassified, but the error codes
   have been retained for compatibility reasons. Applications should therefore attach no
   significance to the choice of codes.</p></note>
   
   <error-list>

      <error spec="XP" code="0001" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if analysis of an
            expression relies on some component of the <termref def="dt-static-context">static
               context</termref> that <phrase diff="del">has not been assigned a
               value</phrase><phrase diff="add">is <xtermref spec="DM40" ref="dt-absent"
            /></phrase>.</p>
      </error>

      <error spec="XP" code="0002" class="DY" type="type">
         <p>It is a <termref def="dt-type-error">type error</termref> if evaluation of an
            expression relies on some part of the <termref def="dt-dynamic-context">dynamic
               context</termref> that is <xtermref spec="DM40" ref="dt-absent"/>.</p>
         <note><p>In version 4.0 this has been reclassified as a type error rather than
         a dynamic error. This change allows a processor to report the error during static
         analysis where possible; for example if the body of a user-defined
         function is written as <code>fn($x) { @code }</code>.
         The error code is prefixed <code>XPDY</code> rather than <code>XPTY</code>
         for backwards compatibility reasons.</p></note>
      </error>

      <error spec="XP" code="0003" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if an expression is not a
            valid instance of the grammar defined in <specref ref="id-grammar"/>.</p>
      </error>

      <error spec="XP" code="0004" class="TY" type="type">
         <p>It is a <termref def="dt-type-error">type error</termref> if, during the <termref
               def="dt-static-analysis">static analysis phase</termref>, an expression is found to
            have a <termref def="dt-static-type">static type</termref> that is not appropriate for
            the context in which the expression occurs, or during the <termref
               def="dt-dynamic-evaluation">dynamic evaluation phase</termref>, the <termref
               def="dt-dynamic-type">dynamic type</termref> of a value does not match a required
            type as specified by the matching rules in <specref ref="id-sequencetype-matching"
            />.</p>
      </error>

      <!--<error spec="XP" code="0005" class="ST" type="static">
         <p> During the analysis phase, it is a <termref def="dt-static-error">static
               error</termref> if the <termref def="dt-static-type">static type</termref> assigned
            to an expression other than the expression <code>()</code> or <code>data(())</code> is
               <code>empty-sequence()</code>.</p>
      </error>-->
      
      <error spec="XP" code="0006" class="TY" type="type">
         <p>During the analysis phase, an expression is classified as <termref def="dt-implausible"/>
            if the inferred <termref def="dt-static-type">static type</termref> <var>S</var> and
            the required type <var>R</var> are substantively disjoint; more specifically, if neither
            of the types is a subtype of the other, and if the only values
            that are instances of both types are one or more of: the empty sequence, the empty map, 
            and the empty array.</p>
      </error>

      <error spec="XP" code="0008" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if an expression refers
            to an element name, attribute name, schema type name, or variable name
            that is not defined in the <termref def="dt-static-context">static context</termref>,
            except for an ElementName in an <nt def="ElementTest">ElementTest</nt> or an
            AttributeName in an <nt def="AttributeTest">AttributeTest</nt>.</p>
      </error>


      <error spec="XQ" role="xquery" code="0009" class="ST" type="static">
         <p diff="chg"> An implementation that does not support the Schema Aware Feature must raise
            a <termref def="dt-static-error">static error</termref> if a Prolog contains a schema
            import.</p>
      </error>

      <error spec="XP" code="0010" class="ST" type="static" role="xpath">
         <p> An implementation that does not support the namespace axis must raise a <termref
               def="dt-static-error">static error</termref> if it encounters a reference to the
            namespace axis and XPath 1.0 compatibility mode is <code>false</code>. </p>
      </error>

      <error spec="XQ" role="xquery" code="0012" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if the set of definitions
            contained in all schemas imported by a Prolog do not satisfy the conditions for schema
            validity specified in Sections 3 and 5 of Part 1 of <bibref ref="XMLSchema10"/> or
               <bibref ref="XMLSchema11"/>.</p>
      </error>

      <error spec="XQ" role="xquery" code="0013" class="ST" type="static">
         <p>It is a <termref def="dt-static-error">static error</termref> if an implementation
            recognizes a pragma but determines that its content is invalid.</p>
      </error>

      <!--
<error spec="XQ" role="xquery" code="0014" class="ST" type="static">
<p>(Not currently used.)</p>
</error>
-->

      <!--
<error spec="XQ" role="xquery" code="0015" class="ST" type="static">
<p>(Not currently used.)</p>
</error>
-->

      <!--<error spec="XQ" role="xquery" code="0016" class="ST" type="static">
         <p>An implementation that does not support the Module Feature raises a <termref
               def="dt-static-error">static error</termref> if it encounters a <termref
               def="dt-module-declaration">module declaration</termref> or a <termref
               def="dt-module-import">module import</termref>.</p>
      </error>-->

      <error spec="XP" code="0017" class="ST" type="static">
         <p>It is a <termref def="dt-static-error"/> if the <termref def="dt-expanded-qname"/>
            and number of arguments in a static function call do not match the name and
            <termref def="dt-arity-range"/> of a <termref def="dt-function-definition"/> in the
            <termref def="dt-static-context"/>, or if an argument keyword in the function call
            does not match a parameter name in that function definition, or if two arguments
            in the function call bind to the same parameter in the function definition.</p>
      </error>

      <error spec="XP" code="0018" class="TY" type="type">
         <p>It is a <termref def="dt-type-error">type error</termref> if the result of a path
            operator contains both nodes and non-nodes.</p>
      </error>

      <error spec="XP" code="0019" class="TY" type="type">
         <p> It is a <termref def="dt-type-error">type error</termref> if <code>E1</code> in a path
            expression <code>E1/E2</code> does not evaluate to a sequence of nodes.</p>
      </error>

      <error spec="XP" code="0020" class="TY" type="type">
         <p> It is a <termref def="dt-type-error">type error</termref> if, in an axis step, the
            context item is not a node.</p>
      </error>
      
      <error spec="XP" code="0021" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if two fields in a record declaration
            have the same name.</p>
      </error>
      
      

 

      <error spec="XQ" role="xquery" code="0022" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if <phrase diff="del">the
               value of</phrase> a <termref def="dt-namespace-decl-attr">namespace declaration
               attribute</termref>
            <phrase diff="del">is not a <nt def="URILiteral">URILiteral</nt>.</phrase><phrase
               diff="add">contains an <nt def="EnclosedExpr">EnclosedExpr</nt>.</phrase></p>
      </error>

      <error spec="XP" code="0023" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if a recursive record type
            cannot be instantiated (typically because it contains a self-reference that is neither optional
            nor emptiable). Processors are not required to detect this error.</p>
      </error>

      <error spec="XQ" role="xquery" code="0024" class="TY" type="type">
         <p> It is a <termref def="dt-type-error">type error</termref> if the content sequence in an
            element constructor contains an attribute node following a node that is not an attribute
            node.</p>
      </error>

      <error spec="XQ" role="xquery" code="0025" class="DY" type="dynamic">
         <p> It is a <termref def="dt-dynamic-error">dynamic error</termref> if any attribute of a
            constructed element does not have a name that is distinct from the names of all other
            attributes of the constructed element.</p>
      </error>

      <error spec="XQ" role="xquery" code="0026" class="DY" type="dynamic">
         <p> It is a <termref def="dt-dynamic-error">dynamic error</termref> if the result of the
            content expression of a computed processing instruction constructor contains the string
               <code>"?&gt;"</code>.</p>
      </error>

      <error spec="XQ" role="xquery" code="0027" class="DY" type="dynamic">
         <p> In a validate expression, it is a <termref def="dt-dynamic-error">dynamic
               error</termref> if the root element information item in the PSVI resulting from
            validation does not have the expected validity property: <code>valid</code> if
            validation mode is <code>strict</code>, or either <code>valid</code> or
               <code>notKnown</code> if validation mode is <code>lax</code>.</p>
      </error>

      <!--
<error spec="XQ" role="xquery" code="0028" class="TY" type="type">
<p>
(Not currently used.)</p>
</error>
-->

      <!--
<error spec="XQ" code="0029" class="DY" type="dynamic" role="xquery">
<p>(Not currently used.)</p>
</error>
-->

      <error spec="XQ" role="xquery" code="0030" class="TY" type="type">
         <p> It is a <termref def="dt-type-error">type error</termref> if the argument of a
               <code>validate</code> expression does not evaluate to exactly one document or element
            node. </p>
      </error>

      <error spec="XQ" role="xquery" code="0031" class="ST" type="static">
         <p>It is a <termref def="dt-static-error">static error</termref> if the version number
            specified in a version declaration is not supported by the implementation. </p>
      </error>

      <error spec="XQ" role="xquery" code="0032" class="ST" type="static">
         <p>A <termref def="dt-static-error">static error</termref> is raised if a Prolog contains
            more than one <termref def="dt-base-uri-decl">base URI declaration</termref>.</p>
      </error>

      <error spec="XQ" code="0033" class="ST" type="static">
         <p>It is a <termref def="dt-static-error">static error</termref> if a module contains
            multiple bindings for the same namespace prefix.</p>
      </error>

      <error spec="XQ" code="0034" class="ST" type="static" role="xquery" diff="chg" at="B">
         <p>It is a <termref def="dt-static-error">static error</termref> if multiple functions
            declared <phrase role="xquery">or imported by a <termref def="dt-module"
               >module</termref></phrase> have the same <termref def="dt-expanded-qname">expanded QName</termref>
            and overlapping arity ranges (the arity range of a function declaration is <var>M</var> to <var>M+N</var>,
            where <var>M</var> is the number of required parameters and <var>N</var> is the number of 
            optional parameters).</p>
      </error>

      <error spec="XQ" role="xquery" code="0035" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> to import two schema
            components that both define the same name in the same symbol space and in the same
            scope. </p>
      </error>

      <!--
<error spec="XQ" role="xquery" code="0036" class="ST" type="type">
          <p diff="add">(Not currently used.)</p>
          <p diff="del">
            It is a <termref def="dt-static-error">static error</termref>
            to import a module if the
            <termref def="dt-issd">in-scope schema definitions</termref>
            of the importing module do not include all of the following:
          </p>
          <olist diff="del">
             <item>
                <p>An <termref def="dt-is-types">in-scope schema type</termref>
                   for each type name that appears:
                </p>
                <olist>
                   <item>
                      <p>in the type of a variable that is declared in the imported module
                         and referenced in the importing module, OR
                      </p>
                   </item><item>
                      <p>in a parameter-type or result-type of a function that is declared
                         in the imported module and referenced in the importing module.
                      </p>
                   </item>
                </olist>
             </item><item>
                <p>An <termref def="dt-is-elems">in-scope element declaration</termref>
                   for each element-name <code>EN</code> such that:
                </p>
                <olist>
                   <item>
                      <p><code>schema-element(EN)</code> appears in the declared
                         type of a variable
                         in the imported module, and that variable is referenced
                         in the importing module, OR
                      </p>
                   </item><item>
                      <p><code>schema-element(EN)</code> appears in a parameter-type or
                         result-type of a function declared in the imported module, and
                         that function is referenced in the importing module.
                      </p>
                   </item>
                </olist>
             </item><item>
                <p>An <termref def="dt-is-attrs">in-scope attribute declaration</termref>
                   for each attribute-name <code>AN</code> such that:
                </p>
                <olist>
                   <item>
                      <p><code>schema-attribute(AN)</code> appears in the declared
                         type of a variable
                         in the imported module, and that variable is referenced
                         in the importing module, OR
                      </p>
                   </item><item>
                      <p><code>schema-attribute(AN)</code> appears in a parameter-type
                         or result-type
                         of a function declared in the imported module, and that function
                         is referenced in the importing module.
                      </p>
                   </item>
                </olist>
             </item>
          </olist>
</error>
-->

      <!--
<error spec="XQ" role="xquery" code="0037" class="ST" type="static">
<p>(Not currently used.)</p>
</error>
-->

      <error spec="XQ" role="xquery" code="0038" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if a Prolog contains more
            than one <termref def="dt-default-collation-decl">default collation
               declaration</termref>, or the value specified by a default collation declaration is
            not present in <termref def="dt-static-collations">statically known
            collations</termref>.</p>
      </error>

      <error spec="XQ" code="0039" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> for <phrase role="xquery"
               >a function declaration or</phrase>
            <phrase diff="add">an inline function expression</phrase> to have more than one
            parameter with the same name. </p>
      </error>

      <error spec="XQ" role="xquery" code="0040" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if the attributes
            specified by a direct element constructor do not have distinct <termref
               def="dt-expanded-qname">expanded QNames</termref>.</p>
      </error>

      <error spec="XQ" role="xquery" code="0041" class="DY" type="dynamic">
         <p> It is a <termref def="dt-dynamic-error">dynamic error</termref> if the value of the
            name expression in a computed processing instruction constructor cannot be cast to the
            type <code>xs:NCName</code>.</p>
      </error>

      <!--
<error spec="XQ" role="xquery" code="0042" class="ST" type="static">
<p>
(Not currently used.)</p>
</error>
-->

      <!--
<error spec="XQ" role="xquery" code="0043" class="ST" type="static">
<p>
(Not currently used.)</p>
</error>
-->

      <error spec="XQ" role="xquery" code="0044" class="DY" type="dynamic">
         <!-- <change diff="chg" at="XQ.E19"> -->
         <p>It is a <termref def="dt-dynamic-error">dynamic error</termref> the node-name of a node
            constructed by a computed attribute constructor has any of the following properties: </p>
         <ulist>
            <item>
               <p>Its namespace prefix is <code>xmlns</code>. </p>
            </item>
            <item>
               <p>It has no namespace prefix and its local name is <code>xmlns</code>. </p>
            </item>
            <item>
               <p>Its namespace URI is <code>http://www.w3.org/2000/xmlns/</code>. </p>
            </item>
            <item>
               <p>Its namespace prefix is <code>xml</code> and its namespace URI is not
                     <code>http://www.w3.org/XML/1998/namespace</code>. </p>
            </item>
            <item>
               <p>Its namespace prefix is other than <code>xml</code> and its namespace URI is
                     <code>http://www.w3.org/XML/1998/namespace</code>. </p>
            </item>
         </ulist>
         <!-- </change> -->
      </error>

      <error spec="XQ" code="0045" class="ST" type="static" role="xquery">
         <p> It is a <termref def="dt-static-error">static error</termref> if <phrase diff="chg">the
               name of <phrase diff="add" at="bug29170">a variable annotation,</phrase> a function annotation, or</phrase> the function name in a function declaration
            is  <phrase diff="chg" at="bug29170">in a <termref def="dt-reserved-namespaces">reserved namespace</termref>.</phrase>
         </p>
      </error>

      <error spec="XQ" code="0046" class="ST" type="static">
         <p>An implementation <phrase role="xquery"><termref def="may">MAY</termref></phrase><phrase
               role="xpath">MAY</phrase> raise a <termref def="dt-static-error">static
               error</termref> if the value of <phrase role="xquery">a <nt def="URILiteral"
                  >URILiteral</nt> or </phrase>a <nt def="BracedURILiteral">BracedURILiteral</nt> is
            of nonzero length and is <phrase diff="del">not in the lexical space of
                  <code>xs:anyURI</code></phrase><phrase diff="add">neither an absolute URI nor a
               relative URI</phrase>.</p>

      </error>

      <error spec="XQ" role="xquery" code="0047" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if multiple module
            imports in the same <nt def="Prolog"/> specify the same target namespace.</p>
      </error>

      <error spec="XQ" role="xquery" code="0048" class="ST" type="static">
         <p> It is a <termref def="dt-static-error"/> if a function, variable,
            or item type declared in a <termref def="dt-library-module"/> is not 
            in the <termref def="dt-target-namespace"/> of the library module.</p>
      </error>

      <error spec="XQ" role="xquery" code="0049" class="ST" type="static">
         <p>It is a <termref def="dt-static-error"/> if two or more variables
            declared or imported by a <termref def="dt-module"/> have equal <termref
               def="dt-expanded-qname">expanded QNames</termref> (as defined by the <code>eq</code>
            operator.)</p>
      </error>

      <error spec="XP" code="0050" class="DY" type="type">
         <p>It is a <termref def="dt-type-error"/> if the <termref
               def="dt-dynamic-type"/> of the operand of a <code>treat</code>
            expression does not match the <termref def="dt-sequence-type"/>
            designated by the <code>treat</code> expression.</p>
         <note><p>This error might also be raised by a
            path expression beginning with <code>/</code> or <code>//</code> if the context node
            is not in a tree that is rooted at a document node. This is because a leading
               <code>/</code> or <code>//</code> in a path expression is an abbreviation for an
            initial step that includes the clause <code>treat as document-node()</code>.</p></note>
      </error>

      <error spec="XP" code="0051" class="ST" type="static">
         <p>It is a <termref def="dt-static-error">static error</termref> if an <termref
               def="dt-expanded-qname"/> used as an <nt def="ItemType">ItemType</nt>
               in a <nt def="SequenceType"/> is not defined
            in the <termref def="dt-static-context"/> either as a <termref def="dt-named-item-type"/>
            in the <termref def="dt-in-scope-named-item-types"/>,
            or as a <termref def="dt-generalized-atomic-type"/>
            in the <termref def="dt-is-types"/>.</p>
      </error>

      <error spec="XQ" code="0052" class="ST" type="static">
         <p>The type named in a cast or castable expression must be the name of a type defined in the <termref def="dt-is-types">in-scope
               schema types</termref>, and the<phrase diff="del" at="2015-07-07"><code>{variety}</code> of the</phrase> type must be
               <code>simple</code>.</p>
      </error>

      <!--
<error spec="XQ" role="xquery" code="0053" class="ST" type="static">
<p>
(Not currently used.)</p>
</error>
-->

      <error spec="XQ" role="xquery" code="0054" class="DY" type="dynamic">
         <p>It is a <termref def="dt-dynamic-error">dynamic error</termref> if a cycle is
            encountered in the definition of a module’s dynamic context components, for example
            because of a cycle in variable declarations.</p>
      </error>

      <error spec="XQ" code="0055" class="ST" type="static" role="xquery">
         <p>It is a <termref def="dt-static-error">static error</termref> if a Prolog contains more
            than one <termref def="dt-copy-namespaces-decl">copy-namespaces
            declaration</termref>.</p>
      </error>

      <!--
<error spec="XQ" code="0056" class="ST" type="static" role="xquery">
<p>
(Not currently used.)</p>
</error>
-->

      <error spec="XQ" code="0057" class="ST" type="static" role="xquery">
         <p> It is a <termref def="dt-static-error">static error</termref> if a schema import binds
            a namespace prefix but does not specify a target namespace other than a zero-length
            string.</p>
      </error>

      <error spec="XQ" code="0058" class="ST" type="static" role="xquery">
         <p> It is a <termref def="dt-static-error">static error</termref> if multiple schema
            imports specify the same target namespace.</p>
      </error>

      <error spec="XQ" code="0059" class="ST" type="static" role="xquery">
         <p> It is a <termref def="dt-static-error">static error</termref> if an implementation is
            unable to process a schema or module import by finding a schema or module with the
            specified target namespace.</p>
      </error>

      <error spec="XQ" code="0060" class="ST" type="static" role="xquery">
         <p> It is a <termref def="dt-static-error">static error</termref> if the name of a function
            in a function declaration is not in a namespace (<termref def="dt-expanded-qname"
               >expanded QName</termref> has a null namespace URI).</p>
      </error>

      <error spec="XQ" role="xquery" code="0061" class="DY" type="dynamic">
         <p> It is a <termref def="dt-dynamic-error">dynamic error</termref> if the operand of a
            validate expression is a document node whose children do not consist of exactly one
            element node and zero or more comment and processing instruction nodes, in any
            order.</p>
      </error>

      <!--
<error spec="XQ" role="xquery" code="0062" class="DY" type="dynamic">
<p>(Not currently used.)</p>
</error>
-->

      <!--
<error spec="XQ" code="0063" class="ST" type="static" role="xquery">
<p>
(Not currently used.)</p>
</error>
-->

      <error spec="XQ" role="xquery" code="0064" class="DY" type="dynamic">
         <p> It is a <termref def="dt-dynamic-error">dynamic error</termref> if the value of the
            name expression in a computed processing instruction constructor is equal to
            <code>XML</code> (in any combination of upper and lower case).</p>
      </error>

      <error spec="XQ" role="xquery" code="0065" class="ST" type="static">
         <p>A <termref def="dt-static-error">static error</termref> is raised if a Prolog contains
            more than one ordering mode declaration.</p>
      </error>

      <error spec="XQ" role="xquery" code="0066" class="ST" type="static">
         <p>A <termref def="dt-static-error">static error</termref> is raised if a Prolog contains
            more than one default element/type namespace declaration, or more than one default
            function namespace declaration. </p>
      </error>

      <error spec="XQ" role="xquery" code="0067" class="ST" type="static">
         <p>A <termref def="dt-static-error">static error</termref> is raised if a Prolog contains
            more than one <termref def="dt-construction-decl">construction
            declaration</termref>.</p>
      </error>

      <error spec="XQ" role="xquery" code="0068" class="ST" type="static">
         <p>A <termref def="dt-static-error">static error</termref> is raised if a Prolog contains
            more than one <termref def="dt-boundary-space-decl">boundary-space
            declaration</termref>.</p>
      </error>

      <error spec="XQ" role="xquery" code="0069" class="ST" type="static">
         <p>A <termref def="dt-static-error">static error</termref> is raised if a Prolog contains
            more than one <termref def="dt-empty-order-decl">empty order declaration</termref>.</p>
      </error>

      <error spec="XQ" code="0070" class="ST" type="static" diff="chg">
         <p>A namespace declaration must not define a binding for the prefix <code>xml</code>
         or <code>xmlns</code>, nor for the URI <code>http://www.w3.org/XML/1998/namespace</code>
         or <code>http://www.w3.org/2000/xmlns/</code>.</p>
         <p role="xquery">The same rule applies to namespace declaration attributes
         (see <specref ref="id-namespaces"/>), except that in this case it is permitted to provide
         a redundant namespace declaration attribute in the form 
            <code>xmlns:xml="http://www.w3.org/XML/1998/namespace"</code>.</p>
         
      </error>

      <error spec="XQ" role="xquery" code="0071" class="ST" type="static">
         <p>A <termref def="dt-static-error">static error</termref> is raised if the namespace
            declaration attributes of a direct element constructor do not have distinct names.</p>
      </error>

      <error spec="XQ" role="xquery" code="0072" class="DY" type="dynamic">
         <p> It is a <termref def="dt-dynamic-error">dynamic error</termref> if the result of the
            content expression of a computed comment constructor contains two adjacent hyphens or
            ends with a hyphen.</p>
      </error>

      <!--
<error spec="XQ" role="xquery" code="0073" class="ST" type="static">
<p diff="chg" at="XQ.E8">(Not currently used.)</p>
</error>
-->

      <error spec="XQ" role="xquery" code="0074" class="DY" type="dynamic">
         <p> It is a <termref def="dt-dynamic-error">dynamic error</termref> if the value of the
            name expression in a computed element or attribute constructor cannot be converted to an
               <termref def="dt-expanded-qname">expanded QName</termref> (for example, because it
            contains a namespace prefix not found in <termref def="dt-static-namespaces">statically
               known namespaces</termref>.)</p>
      </error>

      <error spec="XQ" role="xquery" code="0075" class="ST" type="static">
         <p> An implementation that does not support the <phrase diff="add" at="2015-07-04">Schema Aware Feature</phrase> <phrase diff="del" at="2015-07-04">Validation Feature</phrase> must raise a <termref
               def="dt-static-error">static error</termref> if it encounters a <code>validate</code>
            expression.</p>
      </error>

      <error spec="XQ" role="xquery" code="0076" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if a
               <code>collation</code> subclause in an <code>order by</code> <phrase diff="add" at="2015-07-07">or <code>group by</code></phrase> clause of a FLWOR
            expression does not identify a collation that is present in <termref
               def="dt-static-collations">statically known collations</termref>.</p>
      </error>

      <!--
<error spec="XQ" role="xquery" code="0077" class="ST" type="static">
<p>
(Not currently used.)</p>
</error>
-->

      <!--
<error spec="XQ" role="xquery" code="0078" class="ST" type="static">
<p>
(Not currently used.)</p>
</error>
-->
      <error spec="XQ" role="xquery" code="0079" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if an extension
            expression contains neither a <termref def="dt-pragma">pragma</termref> that is
            recognized by the implementation nor an expression enclosed in curly braces.</p>
      </error>

      <error spec="XP" code="0080" class="ST" type="static">
         <p>It is a <termref def="dt-static-error">static error</termref> if the target type of a
               <code>cast</code> or <code>castable</code> expression is
               <code>xs:NOTATION</code>, <phrase diff="add"><code>xs:anySimpleType</code>,</phrase> or
               <code>xs:anyAtomicType</code>.</p>
      </error>

      <error spec="XP" code="0081" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if a QName used in
               <phrase role="xquery">a query</phrase><phrase role="xpath">an expression</phrase>
            contains a namespace prefix that cannot be expanded into a namespace URI by using the
               <termref def="dt-static-namespaces">statically known namespaces</termref>.</p>
      </error>

      <!--
<error spec="XQ" role="xquery" code="0082" class="ST" type="static">
<p>(Not currently used.)</p>
</error>
-->

      <!--
<error spec="XP" code="0083" class="ST" type="static">
<p>
(Not currently used.)</p>
</error>
-->

      <error spec="XQ" code="0084" class="DY" type="dynamic" role="xquery">
         <p> It is a <termref def="dt-dynamic-error">dynamic error</termref> if the element
            validated by a <code>validate</code> statement does not have a top-level element
            declaration in the <termref def="dt-is-elems">in-scope element declarations</termref>,
            if validation mode is <code>strict</code>.</p>
      </error>

      <error spec="XQ" role="xquery" code="0085" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if the namespace URI in a
            namespace declaration attribute is a zero-length string, and the implementation does not
            support <bibref ref="XMLNAMES11"/>.</p>
      </error>

      <error spec="XQ" role="xquery" code="0086" class="TY" type="type">
         <p> It is a <termref def="dt-type-error">type error</termref> if the typed value of a
            copied element or attribute node is <termref def="dt-namespace-sensitive"
               >namespace-sensitive</termref> when <termref def="dt-construction-mode">construction
               mode</termref> is <code>preserve</code> and <termref def="dt-copy-namespaces-mode"
               >copy-namespaces mode</termref> is <code>no-preserve</code>.</p>
      </error>

      <error spec="XQ" role="xquery" code="0087" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if the encoding specified
            in a Version Declaration does not conform to the definition of <code>EncName</code>
            specified in <bibref ref="XML"/>.</p>
      </error>

      <error spec="XQ" role="xquery" code="0088" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if the literal that
            specifies the target namespace in a <termref def="dt-module-import">module
               import</termref> or a <termref def="dt-module-declaration">module
               declaration</termref> is of zero length.</p>
      </error>

      <error spec="XQ" role="xquery" code="0089" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if a variable bound in a
               <code>for</code> or <code>window</code> clause of a FLWOR expression, and its
            associated positional variable, do not have distinct names (<termref
               def="dt-expanded-qname">expanded QNames</termref>).</p>
      </error>
      
      <error spec="XQ" role="xpath" code="0089" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if a variable bound in a
            <code>for</code> expression, and its
            associated positional variable, do not have distinct names (<termref
               def="dt-expanded-qname">expanded QNames</termref>).</p>
      </error>

      <error spec="XQ" role="xquery" code="0090" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if a <termref
               def="dt-character-reference">character reference</termref> does not identify a valid
            character in the version of XML that is in use.</p>
      </error>

      <error spec="XQ" role="xquery" code="0091" class="DY" type="dynamic">
         <p>An implementation <termref def="may">MAY</termref> raise a <termref
               def="dt-dynamic-error">dynamic error</termref> if an <code>xml:id</code> error, as
            defined in <bibref ref="XMLID"/>, is encountered during construction of an attribute
            named <code>xml:id</code>.</p>
      </error>

      <error spec="XQ" role="xquery" code="0092" class="DY" type="dynamic">
         <p>An implementation <termref def="may">MAY</termref> raise a <termref
               def="dt-dynamic-error">dynamic error</termref> if a constructed attribute named
               <code>xml:space</code> has a value other than <code>preserve</code> or
               <code>default</code>.</p>
      </error>
      <!--
<error spec="XQ" role="xquery" code="0093" class="ST" type="static">
<p>
It is a <termref def="dt-static-error">static
error</termref> to import a module M<sub>1</sub> if there exists a sequence of modules M<sub>1</sub> ... M<sub>i</sub> ... M<sub>1</sub> such that each module <termref def="dt-module-directly-depends">directly depends</termref> on the next module in the sequence (informally, if M<sub>1</sub> depends on itself through some chain of module dependencies.)</p>
</error>
-->

      <error spec="XQ" role="xquery" code="0094" class="ST" type="static">
         <p> The name of each grouping variable must be equal (by the <code>eq</code> operator on
               <termref def="dt-expanded-qname">expanded QNames</termref>) to the name of a variable
            in the input tuple stream.</p>
      </error>

      <!--
<error spec="XQ" role="xquery" code="0095" class="DY" type="dynamic">
<p>
In the <code>group by</code> clause of a FLWOR expression, it is a <termref def="dt-dynamic-error">dynamic error</termref>
if the value bound to a grouping  variable consists of a sequence of more than one item.</p>
</error> -->

      <!-- ################ -->

      <error spec="XQ" role="xquery" code="0096" class="DY" type="dynamic">
         <!-- 	   <change diff="chg" at="XQ.E19"> -->
         <p>It is a <termref def="dt-dynamic-error">dynamic error</termref>
            <phrase diff="add">if</phrase> the node-name of a node constructed by a computed element
            constructor has any of the following properties: </p>
         <ulist>
            <item>
               <p>Its namespace prefix is <code>xmlns</code>. </p>
            </item>
            <item>
               <p>Its namespace URI is <code>http://www.w3.org/2000/xmlns/</code>. </p>
            </item>
            <item>
               <p>Its namespace prefix is <code>xml</code> and its namespace URI is not
                     <code>http://www.w3.org/XML/1998/namespace</code>. </p>
            </item>
            <item>
               <p>Its namespace prefix is other than <code>xml</code> and its namespace URI is
                     <code>http://www.w3.org/XML/1998/namespace</code>. </p>
            </item>
         </ulist>
         <!--	    </change>          -->
      </error>

      <error spec="XQ" role="xquery" code="0097" class="ST" type="static">
         <p> It is a static error for a decimal-format to specify a value that is not valid for a
            given property, as described in <termref def="dt-static-decimal-formats">statically
               known decimal formats</termref></p>
      </error>

      <error spec="XQ" role="xquery" code="0098" class="ST" type="static">
         <p> It is a static error if, for any named or unnamed decimal format, the properties
            representing characters used in a picture string do not each have distinct values. 
            <phrase diff="chg" at="2015-07-07">
              The following properties represent characters used in a picture
              string: 
                <termref def="id-static-decimal-format-decimal-separator">decimal-separator</termref>, 
                <termref def="id-static-decimal-format-exponent-separator">exponent-separator</termref>, 
                <termref def="id-static-decimal-format-grouping-separator">grouping-separator</termref>,
                <termref def="id-static-decimal-format-percent">percent</termref>, 
                <termref def="id-static-decimal-format-per-mille">per-mille</termref>, 
                the family of ten decimal digits starting with <termref def="id-static-decimal-format-zero-digit">zero-digit</termref>, 
                <termref def="id-static-decimal-format-digit">digit</termref>, and 
                <termref def="id-static-decimal-format-pattern-separator">pattern-separator</termref>.
            </phrase>
         </p>
      </error>

      <error spec="XQ" role="xquery" code="0099" class="ST" type="static">
         <p>
            <phrase diff="del">A <code>ContextItemDecl</code> must not occur after an expression
               that relies on the initial context item, and no query</phrase><phrase diff="add">No
               module</phrase> may contain more than one ContextItemDecl. </p>
      </error>

      <!--
<error  spec="XQ" role="xquery" code="0100" class="ST" type="static">
<p>(Not currently used.)
</p>
  <ulist>

  <item><p><termref
  def="id-static-decimal-separator">decimal-separator</termref></p></item>
  <item><p><termref
    def="id-static-decimal-format-grouping-separator">grouping-separator</termref></p></item>

    <item><p><termref
    def="id-static-decimal-format-percent">percent-sign</termref></p></item>

    <item><p><termref
    def="id-static-decimal-format-per-mille">per-mille-sign</termref></p></item>

    <item><p><termref
		 def="id-static-decimal-format-zero-digit">zero-digit</termref></p></item>

    <item><p><termref def="id-static-decimal-format-digit">digit-sign</termref></p></item>
    <item><p><termref def="id-static-decimal-format-pattern-separator">pattern-separator-sign</termref></p></item>
  </ulist>
</error>
-->

      <error spec="XQ" role="xquery" code="0101" class="DY" type="dynamic">

         <p>An error is raised if a computed namespace constructor attempts to do any of the
            following:</p>

         <ulist>
            <item>
               <p>Bind the prefix <code>xml</code> to some namespace URI other than
                     <code>http://www.w3.org/XML/1998/namespace</code>. </p>
            </item>
            <item>
               <p>Bind a prefix other than <code>xml</code> to the namespace URI
                     <code>http://www.w3.org/XML/1998/namespace</code>. </p>
            </item>
            <item>
               <p>Bind the prefix <code>xmlns</code> to any namespace URI. </p>
            </item>
            <item>
               <p>Bind a prefix to the namespace URI <code>http://www.w3.org/2000/xmlns/</code>.
               </p>
            </item>
            <item>
               <p diff="add">Bind any prefix (including the empty prefix) to a zero-length namespace
                  URI.</p>
            </item>
         </ulist>
      </error>

      <error spec="XQ" role="xquery" code="0102" class="DY" type="type">
         <p> In an element constructor, if two or more namespace bindings in the in-scope bindings
            would have the same prefix, then an error is raised if they have different URIs; if they
            would have the same prefix and URI, duplicate bindings are ignored. </p>
         <p> If the name of an element in an element constructor is in no namespace, creating a
            default namespace for that element using a computed namespace constructor is an error.
         </p>
      </error>

      <error spec="XQ" role="xquery" code="0103" class="ST" type="static">

         <p>All variables in a <code>window</code> clause must have distinct names.</p>
      </error>

      <error spec="XQ" role="xquery" code="0104" class="ST" type="static">

         <p>A <nt def="TypeName">TypeName</nt> that is specified in a <code>validate</code>
            expression must be found in the <termref def="dt-issd">in-scope schema
               definitions</termref>
         </p>
      </error>

      <error spec="XQ" role="xquery" code="0105" class="TY" type="type">
         <p> It is a <termref def="dt-type-error">type error</termref> if the content sequence in an
            element constructor contains a function <phrase diff="del">item</phrase>.</p>
      </error>

      <error spec="XQ" role="xquery" code="0106" class="ST" type="static">
         <p diff="add"> It is a <termref def="dt-static-error">static error</termref> if a function
            declaration contains both a <code>%private</code> and a <code>%public</code>
            annotation.</p>
         <p diff="del"> It is a <termref def="dt-static-error">static error</termref> if a
            function’s annotations contain more than one annotation named <code>%private</code> or
               <code>%public</code>, more than one <code>%private</code> annotation, or more than
            one <code>%public</code> annotation.</p>

         <p diff="del"> It is a <termref def="dt-static-error">static error</termref> if a
            function’s annotations contain more than one annotation named
               <code>%deterministic</code> or <code>%nondeterministic</code>. </p>
      </error>


      

      <error spec="XQ" role="xquery" code="0108" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if an <termref
               def="dt-output-declaration">output declaration</termref> occurs in a <termref
               def="dt-library-module">library module</termref>. </p>
      </error>

      <error spec="XQ" role="xquery" code="0109" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if the local name of an
            output declaration in the <code>http://www.w3.org/2010/xslt-xquery-serialization</code>
            namespace is not one of the serialization parameter names listed in <specref
               ref="id-xq-static-context-components"/>, <phrase diff="add">or if the name of an
               output declaration is <code>use-character-maps</code></phrase>. </p>
      </error>

      <error spec="XQ" role="xquery" code="0110" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if the same serialization
            parameter is used more than once in an <termref def="dt-output-declaration">output
               declaration</termref>.</p>

      </error>


      <error spec="XQ" role="xquery" code="0111" class="ST" type="static">

         <p>It is a <termref def="dt-static-error">static error</termref> for a query prolog to
            contain two decimal formats with the same name, or to contain two default decimal
            formats. </p>
      </error>

      <!-- ################ 0112 -->

      <error spec="XQ" role="xquery" code="0113" class="ST" type="static">
         <p> Specifying a <nt def="VarValue">VarValue</nt> or <nt def="VarDefaultValue"
               >VarDefaultValue</nt> for a context item declaration in a library module is a
               <termref def="dt-static-error">static error</termref>. </p>
      </error>


      <error role="xquery" spec="XQ" code="0114" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> for a decimal format
            declaration to define the same property more than once. </p>
      </error>

      <error role="xquery" spec="XQ" code="0115" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if the document specified
            by the option <code>Q{http://www.w3.org/2010/xslt-xquery-serialization}parameter-document</code>
            raises a serialization error. </p>
      </error>


      <error spec="XQ" role="xquery" code="0116" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref>
            <phrase diff="del">if a variable declaration’s annotations contain more than one
               annotation named <code>%private</code> or <code>%public</code>.</phrase>
            <phrase diff="add">if a variable declaration contains both a <code>%private</code> and a
                  <code>%public</code> annotation, more than one <code>%private</code> annotation,
               or more than one <code>%public</code> annotation.</phrase>
         </p>
      </error>

      <error spec="XP" code="0117" class="TY" type="type">
         <!-- Bug 28588 -->
         <p>When applying the <termref def="dt-coercion-rules"/>, if an item is of type <code>xs:untypedAtomic</code> and the
            expected type is <termref def="dt-namespace-sensitive">namespace-sensitive</termref>, a
               <termref def="dt-type-error">type error</termref>
            <errorref class="TY" code="0117"/> is raised. </p>
      </error>

      <error spec="XQ" role="xquery" code="0118" class="ST" type="static">
         <p>In a direct element constructor, the name used in the end tag must exactly match the
            name used in the corresponding start tag, including its prefix or absence of a
            prefix.</p>
      </error>

      <error spec="XQ" role="xquery" code="0119" class="ST" type="static">
         <p>It is a static error if the implementation is not able to process the value of an
               <code>output:parameter-document</code> declaration to produce an XDM instance.</p>
      </error>


      <!--
<error  spec="XQ" role="xquery" code="0121" class="ST" type="static">
<p>It is a static error if a feature specified in <code>prohibit-feature</code> is supported by the implementation.</p>
</error>
-->

      <!--
<error  spec="XQ" role="xquery" code="0124" class="ST" type="static" diff="del">
<p>
It is a static error if the name of a feature in
<code>require-feature</code> or <code>prohibit-feature</code> is not recognized by the implementation.
</p>
</error>
-->

      <error role="xquery" spec="XQ" code="0125" class="ST" type="static" diff="add">
         <p> It is a <termref def="dt-static-error">static error</termref> if an inline function
               <phrase diff="add">expression</phrase> is annotated as <code>%public</code> or
               <code>%private</code>. </p>
      </error>

      <!--
<error  spec="XQ" role="xquery" code="0127" class="ST" type="static" diff="add">
<p>
  It is a <termref def="dt-static-error">static error</termref> if a
  given feature is both required and prohibited, directly or indirectly, in a module.
</p>
</error>
-->

      <!--<error spec="XQ" role="xquery" code="0129" class="ST" type="static"  diff="del" at="2023-01-29">
         <p>An implementation that does not provide the Higher-Order Function Feature <termref
               def="must">MUST</termref> raise a static error <errorref class="ST" code="0129"/> if
            it encounters a <nt def="FunctionTest">FunctionTest</nt>, <termref
               def="dt-dynamic-function-invocation">dynamic function call</termref>, <termref
               def="dt-named-function-ref">named function reference</termref>, <termref
               def="dt-inline-func">inline function expression</termref>, or <termref
               def="dt-partial-function-application">partial function application</termref>. </p>
      </error>
-->

      <error spec="XP" code="0130" class="DY" type="dynamic">
         <p>An implementation-dependent limit has been exceeded.</p>
      </error>


      <!--
<error  spec="XQ" role="xquery" code="0132" class="ST" type="static">
<p>The <code>module</code> feature can only be required or prohibited in a main module, not in a library module.</p>
</error>
-->
<!--
      <error spec="XP" code="0133" class="ST" type="static" diff="del">

         <p>It is a <termref def="dt-static-error">static error</termref>
            <errorref class="ST" code="0133"/> if the namespace URI for an EQName is
               <code>http://www.w3.org/2000/xmlns/</code>.</p>
      </error>
-->

      <error spec="XQ" code="0134" class="ST" type="static">
         <p>The namespace axis is not supported.</p>
      </error>



      <!-- DELETED
<error  spec="XP" role="xquery" code="0135" class="ST" type="static" diff="del">
<p> A processor may raise an error  <errorref code="0034" class="ST"/> if the modules of a query do not have the same version number.</p>
</error>
-->

<!--  DELETED
      <error spec="XQ" code="0136" class="DY" type="dynamic">
         <p>A map key must be a single atomic item.</p>
      </error>
-->

      <error spec="XQ" code="0137" class="DY" type="dynamic">
         <p>No two keys in a map may have the  <termref
    def="dt-same-key">same key value</termref>.</p>
      </error>

<!--  DELETED (bug 28689) 
      <error spec="XP" code="0138" class="DY" type="dynamic">
         <p>Position <code>n</code> does not exist in this array.</p>
      </error>


      <error spec="XP" code="0139" class="DY" type="dynamic">
         <p>The keys in a map constructor cannot contain both
         date/time values with a timezone and date/time values with no
         timezone. 
         </p>
      </error>
-->
      
      <error spec="XQ" code="0140" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> if a named item type declaration 
            is recursive, unless it satisfies the conditions defined in <specref ref="id-recursive-record-tests"/>.</p>
      </error>
      
      <error spec="XP" code="0141" class="TY" type="type">
         <p>In a <code>for</code> <phrase role="xpath">expression</phrase><phrase role="xquery">clause</phrase>,
         when the keyword <code>member</code> is present, the value of the binding collection
         must be a single array; and when either or both of the keywords <code>key</code> and <code>value</code>
         are present, the value of the binding collection must be a single map.</p>
      </error>
      
      <error spec="XP" code="0144" class="TY" type="type">
         <p>During the analysis phase, an axis step is classified as <termref def="dt-implausible"/>
            if the combination of the inferred context item type, the choice of axis, and the
            supplied node test, is such that the axis step will always return an empty sequence.</p>
      </error>
      
      <error spec="XP" code="0145" class="TY" type="type">
         <p>During the analysis phase, a unary or postfix lookup expression is classified as <termref def="dt-implausible"/>
            if the combination of the inferred type of the left-hand operand (or the context item type
            in the case of a unary expression) and the choice of key specifier is such that the lookup expression
            will always return an empty sequence.</p>
      </error>
      
      <error spec="XQ" role="xquery" code="0146" class="ST" type="static">
         <p>It is a <termref def="dt-static-error">static error</termref> if two or more item types
            declared or imported by a <termref def="dt-module">module</termref> have equal <termref
               def="dt-expanded-qname">expanded QNames</termref> (as defined by the <code>eq</code>
            operator.)</p>
      </error>
      
      <!--<error spec="XP" code="0147" class="ST" type="static">
         <p>It is a <termref def="dt-static-error">static error</termref> if a type used as a member
         type in a <nt def="LocalUnionType">LocalUnionType</nt> is not a 
         <termref def="dt-generalized-atomic-type"/>.</p>
      </error>-->
      
      <error spec="XQ" role="xquery" code="0148" class="ST" type="static">
         <p>It is a <termref def="dt-static-error">static error</termref> if an optional parameter
            in a function declaration is followed by a parameter that does not have a default value.</p>
      </error>
      
      <error spec="XQ" role="xquery" code="0149" class="ST" type="static">
      <p> It is a <termref def="dt-static-error">static error</termref> 
         if the schemas imported by different modules of a query
         are not compatible as defined in <xspecref spec="DM40" ref="schema-consistency"/>.</p>
      </error>
      
      <!--<error spec="XQ" role="xquery" code="0150" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> 
            if any of the parameters in a variadic function declaration 
            is declared as optional: that is, 
            if a function declaration is annotated as
            <code>%variadic</code> then none of its parameters may 
            contain a <nt def="ParamWithDefault">ParamWithDefault</nt>.</p>
      </error>-->
      
      <error spec="XQ" role="xquery" code="0151" class="ST" type="static">
         <p> It is a <termref def="dt-static-error">static error</termref> 
            if a node name supplied as a string literal in a computed element or
            attribute constructor does not take the form of an 
            <nt def="EQName">EQName</nt>.</p>
      </error>
      
      <error spec="XP" code="0152" class="ST" type="static">
         <p>It is a <termref def="dt-static-error">static error</termref> 
            if a key type named in a <nt def="TypedMapType"/> is not a
            <termref def="dt-generalized-atomic-type"/>.</p>
      </error>

      <error spec="XQ" role="xquery" code="0153" class="TY" type="type">
         <p>The expression of a <code>finally</code> clause must return an empty sequence.</p>
      </error>
      
      <error spec="XP" code="0154" class="ST" type="static">
         <p>It is a <termref def="dt-static-error">static error</termref> 
            if a <nt def="URIQualifiedName">URIQualifiedName</nt> includes a prefix but no URI.</p>
      </error>
      
      
      
      
      

   </error-list>
</div1>
