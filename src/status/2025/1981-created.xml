<item>
   <title>Issue #1981 created</title>
   <pubDate>2025-05-06T16:41:32Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1981</link>
   <guid>https://qt4cg.org/@qt4cg/2025/#created-1981</guid>
   <description>&lt;div&gt;&lt;p&gt;Syntax for QName literals clashes with XQuery pragmas&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Unfortunately (as revealed by implementation and testing) the syntax for QName literals clashes with the syntax for pragmas in XQuery.&lt;/p&gt;
&lt;p&gt;In the expression &lt;code&gt;error(#err:XPTY0004)&lt;/code&gt;, the longest token after &lt;code&gt;error&lt;/code&gt; is &lt;code&gt;(#&lt;/code&gt; which looks like the start of a pragma.&lt;/p&gt;
&lt;p&gt;It's actually a wee bit complicated. Looking at the tokenization rules, we shouldn't be recognizing a pragma here because there is no closing &lt;code&gt;#)&lt;/code&gt;. The tokenization notes say "The lexical production rules for [variable terminals] have been designed so that there is minimal need for backtracking."; the introduction of the new syntax would mean that this is no longer the case. But regardless of the details, I think we have to change the QName literal syntax.&lt;/p&gt;
&lt;p&gt;I propose we go for doubling the hash: &lt;code&gt;error(##err:XPTY0004)&lt;/code&gt;. We need to qualify the rules for tokenizing a pragma to say that a pragma is recognized when we see (&lt;code&gt;(#&lt;/code&gt;, optional whitespace, EQName) - that's not unlike the rules we have for other "variable tokens".&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
