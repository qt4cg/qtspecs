<item>
   <title>Issue #1852 created</title>
   <pubDate>2025-02-27T08:56:40Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1852</link>
   <guid>https://qt4cg.org/@qt4cg/2025/#created-1852</guid>
   <description>&lt;div&gt;&lt;p&gt;fn:values-except: Return atomic values that occur in A but not in B&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;&lt;code&gt;fn:distinct-values&lt;/code&gt; can be used to perform a &lt;code&gt;union&lt;/code&gt; on atomic values:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;(: returns 1 to 5 :)
let $one := 1 to 4, $two := 2 to 5
return distinct-values(($one, $two))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A (roughly) equivalent alternative is &lt;code&gt;$one[. = $two]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fn:duplicate-values&lt;/code&gt; can be used for &lt;code&gt;intersect&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;(: returns 2 to 4 :)
let $one := 1 to 4, $two := 2 to 5
return duplicate-values(($one, $two))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I think we should add an equivalent for &lt;code&gt;except&lt;/code&gt; (it requires 2 arguments instead of 1):&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;fn:values-except(
  $values     as xs:anyAtomicType*,
  $exclude    as xs:anyAtomicType*,
  $collation  as xs:string?         := fn:default-collation()
) as xs:anyAtomicType*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;(: returns 1 :)
let $one := 1 to 4, $two := 2 to 5
return values-except($one, $two)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In principle, this function can also be written as &lt;code&gt;$one[not(. = $two)]&lt;/code&gt;, but a dedicated function will be easier to understand for users and easier to optimize for processors.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
