<item>
   <title>Issue #2080 created</title>
   <pubDate>2025-07-03T20:24:20Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/2080</link>
   <guid>https://qt4cg.org/@qt4cg/2025/#created-2080</guid>
   <description>&lt;div&gt;&lt;p&gt;Destructuring let clauses: Bind remaining values&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;With the new LetSequenceBinding, LetArrayBinding and LetMapBinding clauses, single items of an evaluated expression can be partially bound:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;let $($a, $b) := (1, 2, 3)
let $[$a $b, $c] := [ 1, 2, 3 ]
let ${$a, $b} := { 'a': 1, 'b': 2, 'c': 3 }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It would be helpful to be able to also bind all remaining items, for example with the three-dot syntax. If we allow this syntax for maps, the result could be a submap with all entries except for the ones that were bound by previous bindings:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;(: $first: 1, $remaining: (2, 3) :)
let $($first, $remaining...) := (1, 2, 3)

(: $first: 1, $remaining: (2, 3) :)
let $[$first, $remaining...] := [ 1, 2, 3 ]

(: $a: 1, $remaining: { 'b': 2, 'c': 3 } :)
let ${$a, $remaining...} := { 'a': 1, 'b': 2, 'c': 3 }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
