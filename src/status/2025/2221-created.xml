<item>
   <title>Issue #2221 created</title>
   <pubDate>2025-10-02T13:38:36Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/2221</link>
   <guid>https://qt4cg.org/@qt4cg/2025/#created-2221</guid>
   <description>&lt;div&gt;&lt;p&gt;fn:unparsed-text, bin:decode-string: Encoding, BOM handling&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;When trying to write a PR for #2217, I noticed some general inconsistencies that we should clarify first.&lt;/p&gt;
&lt;h3&gt;Unifications&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;fn:unparsed-text&lt;/code&gt; and &lt;code&gt;bin:decode-string&lt;/code&gt; use different rules for handling the input encoding:&lt;/p&gt;
&lt;p&gt;Rule | &lt;code&gt;fn:unparsed-text&lt;/code&gt; | &lt;code&gt;bin:decode-string&lt;/code&gt;
-- | -- | --
A. Require implementations to support… | &lt;code&gt;utf-8&lt;/code&gt;, &lt;code&gt;utf-16&lt;/code&gt; | &lt;code&gt;utf-8&lt;/code&gt;, &lt;code&gt;utf-16&lt;/code&gt;, &lt;code&gt;utf-16be&lt;/code&gt;, &lt;code&gt;utf-16le&lt;/code&gt;
B. Handling of initial &lt;code&gt;xFF&lt;/code&gt; and &lt;code&gt;xFE&lt;/code&gt; (before decoding) | ignored | interpret &lt;code&gt;utf-16&lt;/code&gt; as &lt;code&gt;utf-16le&lt;/code&gt;
C. Handling of initial &lt;code&gt;\uFEFF&lt;/code&gt; (after decoding) | discarded | adopted (or interpreted, see PR for #2217)
D. Implementation-defined heuristics to detect the encoding… | allowed | not allowed&lt;/p&gt;
&lt;p&gt;I think we should…&lt;/p&gt;
&lt;p&gt;  A. require implementations to support &lt;code&gt;utf-8&lt;/code&gt;, &lt;code&gt;utf-16&lt;/code&gt;, &lt;code&gt;utf-16be&lt;/code&gt;, and &lt;code&gt;utf-16le&lt;/code&gt; in both functions;
  B. always interpret BOMs;
  C. adopt (ZWNBSP) as Unicode input (after all, it should hardly ever occur at this place);
  D. keep the current behavior unchanged (due to &lt;code&gt;bin:decode-string&lt;/code&gt; being a more low-level operation)&lt;/p&gt;
&lt;h3&gt;BOM handling&lt;/h3&gt;
&lt;p&gt;As insinuated in B., I would suggest always interpreting a BOM if it exists, and skipping the bytes. If an encoding is specified that conflicts with the inferred encoding, we could…&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;overwrite the inferred encoding,&lt;/li&gt;
&lt;li&gt;ignore the encoding argument, or&lt;/li&gt;
&lt;li&gt;raise an error.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Option 1 would be my preference, in adherence to the principle that user input should always be taken serious: If the input cannot be decoded with a specified encoding, this already results in an error (&lt;code&gt;err:FOUT1200&lt;/code&gt;, most probably, although this needs to be clarified in the specs as well).&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
