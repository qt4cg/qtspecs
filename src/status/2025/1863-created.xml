<item>
   <title>Issue #1863 created</title>
   <pubDate>2025-03-10T05:49:18Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1863</link>
   <guid>https://qt4cg.org/@qt4cg/2025/#created-1863</guid>
   <description>&lt;div&gt;&lt;p&gt;add \U \u L \u \E to replace() (case conversion)&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Many systems using regular expressions support case conversion in the replacement strings.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;sed -e 's/[aA]*/\L\u&amp;amp;/'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;given AAA as input, produces Aaa.&lt;/p&gt;
&lt;p&gt;It’s not 100% clear to me its worth adding, since an action function can do the same thing with more or less work,
but for reference,&lt;/p&gt;
&lt;p&gt;\U turns the replaced text into upper case until \E, \L, or the end of the replacement string
\L turns the replaces text to lower case in the same way
\u and \l affect the single next character and operate independently of \U, \L, \E.&lt;/p&gt;
&lt;p&gt;I wrote up some more precise spec text and can make a pull request; the case in the sed example above is common in text conversion projects but slightly tricky to get right with a function,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;          fn { upper-case(substring(., 1, 1)) || lower-case(substring(., 2) }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is simple, but consider &lt;code&gt;\2 \L\u\1\3&lt;/code&gt; as a function, where &lt;code&gt;\1&lt;/code&gt; may be empty.&lt;/p&gt;
&lt;p&gt;Overall i don’t have strong feelings either way, except that supporting them may help people migrate from other systems or languages. \E feels uncomfortably procedural. In Perl and libpcre i think, \E also turns of \Q (which disables all metadata characters up until \E).&lt;/p&gt;
&lt;p&gt;Like &amp;lt; and &amp;gt; in patterns, \L and friends can be emulated with some care, but that’s true of a lot of regular expression syntax, and one point of the shorthands (as i see it) is to move the feature towards being accessible by people with less of a programming background.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
