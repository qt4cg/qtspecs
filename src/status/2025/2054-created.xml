<item>
   <title>Issue #2054 created</title>
   <pubDate>2025-06-16T18:21:55Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/2054</link>
   <guid>https://qt4cg.org/@qt4cg/2025/#created-2054</guid>
   <description>&lt;div&gt;&lt;p&gt;JPath expression&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I feel that there is one aspect about the exciting new &lt;a href="https://qt4cg.org/dashboard/#pr-2031"&gt;JNode proposal&lt;/a&gt; that may develop into a permanent crutch. It is the lack of symmetry between simple lookups and lookups with axes:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;a?b
a?child::b
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This particularly strikes me as this inconsistency does not exist in XPath.&lt;/p&gt;
&lt;p&gt;What about the idea to keep XPath 3.1 lookups unchanged and simple – for the vast number of use cases that do not require navigation – and to introduce a new “JPath expression” instead that will exclusively produce JNodes?&lt;/p&gt;
&lt;p&gt;The JStep separator that I would recommend for it is the backslash character &lt;code&gt;\&lt;/code&gt;. It bears even more resemblance to the XPath step separator than the often questioned question mark. By using a new syntax, I believe we would have much more freedom in designing a clean solution for navigating maps and arrays that is more consistent as well as more similar to classical node paths.&lt;/p&gt;
&lt;p&gt;Some syntactical examples:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;let $countries := {
  'Japan': {
    'cities': [ { 'Fukuoka': { 'population': 1600000 } } ]
  }
}
return (
  $countries\*,
  $countries\\cities
  $countries\Japan\cities[.\\population &amp;gt; 1000]\..,
  $countries\\*[.\ancestor::Japan]
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Among other advantages that I see, the traversal of arrays of maps would also be less controversial (#115).&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
