<item>
   <title>Issue #1829 created</title>
   <pubDate>2025-02-20T11:58:48Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1829</link>
   <guid>https://qt4cg.org/@qt4cg/2025/#created-1829</guid>
   <description>&lt;div&gt;&lt;p&gt;Problems with new arrow expression syntax&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;I'm hitting problems with implementing the changes in PR #1763&lt;/p&gt;
&lt;p&gt;The problem is that the &lt;code&gt;=&amp;gt;&lt;/code&gt; can now be followed by either a static function call or a dynamic function call, and I think we need unbounded lookahead to distinguish them.&lt;/p&gt;
&lt;p&gt;Consider&lt;/p&gt;
&lt;p&gt;&lt;code&gt;3 =&amp;gt; function-lookup(xs:QName('fn:abs'), 1)()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;at first sight the arrow appears to be followed by a static function call, &lt;code&gt;function-lookup(xs:QName('fn:abs'), 1)&lt;/code&gt;. But treating it as such causes a parsing error when we get to the &lt;code&gt;()&lt;/code&gt; - what we actually have here is a dynamic function call that starts with a static function call.&lt;/p&gt;
&lt;p&gt;I propose that we revert to allowing a dynamic function call only in the form&lt;/p&gt;
&lt;p&gt;a =&amp;gt; x ( argument-list )&lt;/p&gt;
&lt;p&gt;where x is a variable reference, a parenthesized expression, an inline function expression, or a map or array constructor.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
