<item>
   <title>Issue #2112 created</title>
   <pubDate>2025-07-22T13:46:28Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/2112</link>
   <guid>https://qt4cg.org/@qt4cg/2025/#created-2112</guid>
   <description>&lt;div&gt;&lt;p&gt;JNodes: get()&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;The documentation for &lt;code&gt;get()&lt;/code&gt; says for XNodes…&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A selector can also take the form &lt;code&gt;get(Expr)&lt;/code&gt;. The contained expression &lt;em&gt;Expr&lt;/em&gt; is evaluated with the focus of the containing axis step (so its value is independent of the specific XNode being tested). The result of the expression after atomization must be a sequence of zero or more &lt;code&gt;xs:QName&lt;/code&gt; values (otherwise a type error [&lt;a href="https://qt4cg.org/specifications/xquery-40/xquery-40.html#ERRXPTY0004"&gt;err:XPTY0004&lt;/a&gt;] is raised). An XNode satisfies the selector if its node kind is the principal node kind of the axis and its node name is among the values returned by the selector expression.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;…and for JNodes…&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the selector takes the form &lt;code&gt;get(Expr)&lt;/code&gt;, then the contained expression &lt;em&gt;Expr&lt;/em&gt; is evaluated with the focus of the containing axis step (so its value is independent of the specific JNode being tested). A JNode satisfies the selector if its &lt;strong&gt;·selector·&lt;/strong&gt; property is equal to one or more of the values returned by the selector expression, under the rules of the &lt;a href="https://qt4cg.org/specifications/xpath-functions-40/Overview.html#func-atomic-equal"&gt;fn:atomic-equal&lt;/a&gt; function.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Nitpicking:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;With the existing rule for JNodes, I assume that no match would be returned for &lt;code&gt;EXPR := [ 'a', 'b' ]&lt;/code&gt;. I would thus propose to atomize EXPR first and compare it afterwards (see below).&lt;/li&gt;
&lt;li&gt;“A JNode satisfies the selector if [the value of] its &lt;strong&gt;·selector·&lt;/strong&gt; property”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Next, I would like us to unify the rules for XNodes and JNodes. The rationale (besides “simpler rules are simpler to explain”):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;XPath is well-known for being forgiving. Maybe we can maintain that tradition for name tests, by tolerating input other than QNames.&lt;/li&gt;
&lt;li&gt;By using identical rules for JNodes and XNodes, it will be easier to process input that mixed XNodes and JNodes. An example:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;(&amp;lt;xml&amp;gt;ignored&amp;lt;/xml&amp;gt;, { 1: 'one' }, [ 'one' ])/get(1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I would propose to simplify the joint rules to the following XPath expression:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;some(
  data(EXPR),
  atomic-equal(?, if(. instance of node()) then node-name() else jnode-selector())
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, I assume that the focus information can be utilized in the get expression, right? Is it correct to assume that all of the following expressions will return &lt;code&gt;&amp;lt;a2/&amp;gt;&lt;/code&gt;?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let $xml := &amp;lt;xml&amp;gt;&amp;lt;a3/&amp;gt;&amp;lt;a2/&amp;gt;&amp;lt;a1/&amp;gt;&amp;lt;/xml&amp;gt;
let $name := #a2
return (
  $xml/get(#a2),
  $xml/get($name),
  $xml/get(node-name()[. = $name])
  $xml/get(xs:QName('a' || position())),
  $xml/get(if(position() = 2) { $name } ),
  $xml/get(xs:QName(`a{ last() - 1 }`))
)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
