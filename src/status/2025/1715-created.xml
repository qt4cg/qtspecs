<item>
   <title>Issue #1715 created</title>
   <pubDate>2025-01-20T13:59:18Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/1715</link>
   <guid>https://qt4cg.org/@qt4cg/2025/#created-1715</guid>
   <description>&lt;div&gt;&lt;p&gt;Array Lookups: partial removal of out-of-bounds checks&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Various QT4 tests imply that the out-of-bounds check for arrays have been removed. An example:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;test-case name="UnaryLookup-005a"&amp;gt;
  &amp;lt;description&amp;gt;Integer subscript into an array: array index too low&amp;lt;/description&amp;gt;
  &amp;lt;created by="Michael Kay" on="2014-11-27"/&amp;gt;
  &amp;lt;modified by="Michael Kay" on="2024-07-22" change="returns () in 4.0"/&amp;gt;
  &amp;lt;dependency type="spec" value="XP40+ XQ40+"/&amp;gt;
  &amp;lt;test&amp;gt;(['a', 'b'], ['c', 'd'])[ ?0 eq 'c']&amp;lt;/test&amp;gt;
  &amp;lt;result&amp;gt;
    &amp;lt;assert-empty/&amp;gt;
  &amp;lt;/result&amp;gt;
&amp;lt;/test-case&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I believe this is not reflected in the spec yet, or at least it includes examples that need to be updated:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;[ "a", "b" ]?3&lt;/code&gt; raises a dynamic error &lt;code&gt;err:FOAY0001&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I guess that #832 would have been the PR with the relevant changes (we have already observed in another issue that some changes of this PR need to survive; see https://github.com/qt4cg/qtspecs/pull/1283#issuecomment-2568330191).&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;strong&gt;Edit (2025-05-26): Outdated:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;That leads me to the original reason for creating this issue:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I think itâ€™s a good idea to drop the range check for array lookups, and it would seem consistent to me to also drop it for dynamic function calls.&lt;/li&gt;
&lt;li&gt;As map/array lookups and dynamic function calls are often used interchangeably, &lt;code&gt;$array?0&lt;/code&gt; and &lt;code&gt;$array(0)&lt;/code&gt; should behave identically.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;FOAY0001&lt;/code&gt; error would (and should) still be raised by the array functions, including &lt;code&gt;array:get&lt;/code&gt;, &lt;code&gt;array:put&lt;/code&gt;, &lt;code&gt;array:remove&lt;/code&gt;, or &lt;code&gt;array:insert-before&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
