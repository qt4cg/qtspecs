<item>
   <title>Pull request #1835 created</title>
   <pubDate>2025-02-24T08:15:41Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/pull/1835</link>
   <guid>https://qt4cg.org/@qt4cg/2025/#created-1835</guid>
   <description>&lt;div&gt;&lt;p&gt;add zero-width assertions to regular expressions&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;Proposal for issues !998 and !1006 to add zero-width assertions - lookahead, lookbehind, and word boundary.&lt;/p&gt;
&lt;p&gt;Word boundaries use the already-defined \w and \W from XML Schema.&lt;/p&gt;
&lt;p&gt;The syntax for lookahead and lookbehind assertions supports the two most common variants, one using &amp;lt; and &amp;gt; and the other using &lt;code&gt;(*positive_lookahead:expr)&lt;/code&gt;, which is at least amenable to Web searches, and doesn’t need escaping in XSLT or XQuery.&lt;/p&gt;
&lt;p&gt;Note that word boundary &amp;lt; \b \B &amp;gt; assertions can be rewritten in terms of lookahead and lookbehind assertions.&lt;/p&gt;
&lt;p&gt;Perl has a more powerful form of \b and \B that can match grapheme clusters, the Unicode linebreaking algorithm, and more, but supporting that would require language and script based mechanisms; if the graphemes() function is added, it would be worth considering. For now, i made it an error to write \b{...} so that the support could be added later if wanted, and also so that copying regular expressions into XPath would raise an error for the unsupported feature.&lt;/p&gt;
&lt;p&gt;I will reopen !998 - if this is accepted i can produce test cases. Of course, i’m also happy to edit/rewrite etc.  The syntax is widely supported, although \K is i think not in libpcre (but, libpcre has looser restrictions on negative backward assertions).&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
