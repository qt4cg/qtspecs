<item>
   <title>Issue #2009 created</title>
   <pubDate>2025-05-17T08:16:02Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/2009</link>
   <guid>https://qt4cg.org/@qt4cg/2025/#created-2009</guid>
   <description>&lt;div&gt;&lt;p&gt;xsl:variable implicit document nodes&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;In XSLT 3.0, an &lt;code&gt;xsl:variable&lt;/code&gt; instruction with no &lt;code&gt;select&lt;/code&gt; or &lt;code&gt;as&lt;/code&gt; attribute implicitly wraps the value created by the sequence constructor in a document node. This inevitably fails if the content is a map, making it necessary to write&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;xsl:variable name="m" as="map(*)"&amp;gt;
   &amp;lt;xsl:map&amp;gt;...&amp;lt;/xsl:map&amp;gt;
&amp;lt;/xsl:variable&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I propose that this wrapping should not happen if the first item in the result of the sequence constructor is a function item (including a map or array). The practical effect on users is that they can leave out the &lt;code&gt;as="map(*)"&lt;/code&gt; attribute in this situation.&lt;/p&gt;
&lt;p&gt;For function items other than arrays, this is currently an error condition so there is no incompatibility.&lt;/p&gt;
&lt;p&gt;For arrays it does represent an incompatible change -- the current rules ("Constructing complex content") say that an array is flattened. But XSLT 3.0 has no instruction to construct an array, it would have to be done using &lt;code&gt;xsl:sequence&lt;/code&gt;; and no-one would deliberately construct an array merely in order to flatten it, so the situation is unlikely to arise in practice.&lt;/p&gt;
&lt;p&gt;The proposal is that the decision whether or not to construct a wrapping document node should be based on the first item in the sequence. This is to allow lazy evaluation. A function item appearing later in the sequence would be handled the same way as now -- most likely an error. An empty sequence continues to result in a childless document node.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
