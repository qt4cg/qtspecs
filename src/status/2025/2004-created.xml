<item>
   <title>Issue #2004 created</title>
   <pubDate>2025-05-15T16:41:25Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/2004</link>
   <guid>https://qt4cg.org/@qt4cg/2025/#created-2004</guid>
   <description>&lt;div&gt;&lt;p&gt;xsl:xpath instruction&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;In the case study https://github.com/qt4cg/qtspecs/issues/1786#issuecomment-2884424739 I encountered a use case where an instruction &lt;code&gt;xsl:xpath&lt;/code&gt; would be useful.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;xsl:xpath&amp;gt;
   { "class":
       { "name": f:degenerify(name/@identifier),
          "abstract": ? abstract,
           "extends": array{? extendedTypes =!&amp;gt; map:merge(apply-templates()) },
           "implements": array{? implementedTypes =!&amp;gt; map:merge(apply-templates()) }
             ...
       }
  }
 &amp;lt;/xsl:xpath&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The instruction is very simple: &lt;code&gt;&amp;lt;xsl:xpath&amp;gt;EXPR&amp;lt;/xsl:xpath&amp;gt;&lt;/code&gt; is equivalent to &lt;code&gt;&amp;lt;xsl:sequence select="EXPR"/&amp;gt;&lt;/code&gt;. It's particularly useful because XPath constructors for maps and arrays are so much more concise than the XSLT equivalents. Compared with using xsl:sequence, it means that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;XML attribute value normalization doesn't kick in, so your formatting is better protected (meaning also that the system has some chance of computing line numbers correctly for diagnostics)&lt;/li&gt;
&lt;li&gt;You haven't tied up either single or double-quotes as an attribute delimiter; both can be freely used within the expression.&lt;/li&gt;
&lt;li&gt;You aren't creating the false impression that you're returning a (multi-item) sequence&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that the content is NOT a sequence constructor; no child elements are allowed; and the content is not interpreted as a text value template. Unlike xsl:evaluate, the XPath expression is statically fixed.&lt;/p&gt;
&lt;p&gt;(This example also introduces apply-templates as a function, but that will be a separate proposal).&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
