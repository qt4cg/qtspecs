<item>
   <title>Issue #2086 created</title>
   <pubDate>2025-07-08T20:10:59Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/2086</link>
   <guid>https://qt4cg.org/@qt4cg/2025/#created-2086</guid>
   <description>&lt;div&gt;&lt;p&gt;Can the ¶value property of a JNode be (or contain) a JNode?&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;The data model allows the ¶value property of a JNode be (or contain) a JNode. But can it actually happen, and if so, what are the consequences?&lt;/p&gt;
&lt;p&gt;I think it can happen. Although fn:JNode can't be applied directly to a JNode, it is possible to construct a map or array in which the entries/members are (or contain) JNodes. We can then wrap such an array or map in a JNode using the fn:JNode function, and the child axis applied to this containing array will return JNodes that have JNodes as their ¶value properties.&lt;/p&gt;
&lt;p&gt;While the results may be confusing, I don't think they are harmful (and someone may find an imaginative way of making use of such a structure). For the time being therefore, I propose to allow it, perhaps with an explanatory note to point out any dangers.&lt;/p&gt;
&lt;p&gt;Should atomization of a JNode unwrap multiple layers? We currently say that if a JNode J has a ¶value V, then the atomization of J is the atomization of V. I see no particular reason to change that rule, but again, it's an edge case we might draw attention to.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
