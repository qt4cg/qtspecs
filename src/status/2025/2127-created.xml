<item>
   <title>Issue #2127 created</title>
   <pubDate>2025-07-25T09:31:01Z</pubDate>
   <link>https://github.com/qt4cg/qtspecs/issues/2127</link>
   <guid>https://qt4cg.org/@qt4cg/2025/#created-2127</guid>
   <description>&lt;div&gt;&lt;p&gt;JNodes: Include atomic items&lt;/p&gt;&lt;div class="markup"&gt;&lt;p&gt;With the introduction of JNodes, it feels like a natural step to enhance the processing of documents, collections and databases to JSON data. Currently, the roots of JNodes are restricted to maps and arrays. We should generalize them and include support for atomic items. The Background:&lt;/p&gt;
&lt;p&gt;JSON data types are not restricted to maps (objects) and arrays, they can also be strings, numbers and booleans. As a consequence, a &lt;code&gt;json-doc('input.json')&lt;/code&gt; call may also return atomic types. When iterating over JSON input, we should ensure that there is no need for additional type checks to ensure that code does not fail:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xquery"&gt;for $i in 1 to 10
for $doc in json-doc($i || '.json')
(: where $doc instance of (map(*)|array(*)) :)
return $doc/a/b/c
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I assume it would be no substantial change to open &lt;code&gt;$json/step&lt;/code&gt; for types other than nodes, maps and arrays. The only tricky special case is &lt;code&gt;null&lt;/code&gt;, but it is converted to an empty sequence, why &lt;code&gt;json-doc('document-with-single-null-value.json')/a/b/c&lt;/code&gt; already succeeds.&lt;/p&gt;
&lt;p&gt;To address any concerns that JNodes do not make sense for standalone atomic items: There is a certain analogy to XML text nodes, which can also be created without serving any immediate purpose, but are helpful and necessary for mapping the entire XML data model.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description>
</item>
