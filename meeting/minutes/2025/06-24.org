:PROPERTIES:
:ID:       E0B59E0F-D6E9-48A5-BD96-B58C193E48FA
:end:
#+title: QT4 CG Meeting 126 Minutes 2025-06-24
#+author: Norm Tovey-Walsh
#+filetags: :qt4cg:
#+options: html-style:nil h:6 toc:nil
#+html_head: <link rel="stylesheet" type="text/css" href="/meeting/css/htmlize.css"/>
#+html_head: <link rel="stylesheet" type="text/css" href="../../../css/style.css"/>
#+html_head: <link rel="shortcut icon" href="/img/QT4-64.png" />
#+html_head: <link rel="apple-touch-icon" sizes="64x64" href="/img/QT4-64.png" type="image/png" />
#+html_head: <link rel="apple-touch-icon" sizes="76x76" href="/img/QT4-76.png" type="image/png" />
#+html_head: <link rel="apple-touch-icon" sizes="120x120" href="/img/QT4-120.png" type="image/png" />
#+html_head: <link rel="apple-touch-icon" sizes="152x152" href="/img/QT4-152.png" type="image/png" />
#+options: author:nil email:nil creator:nil timestamp:nil
#+startup: showall

[[../][Meeting index]] / [[https://qt4cg.org][QT4CG.org]] / [[https://qt4cg.org/dashboard][Dashboard]] / [[https://github.com/qt4cg/qtspecs/issues][GH Issues]] / [[https://github.com/qt4cg/qtspecs/pulls][GH Pull Requests]]

#+TOC: headlines 6

* Draft Minutes
:PROPERTIES:
:unnumbered: t
:CUSTOM_ID: minutes
:END:

* Summary of new and continuing actions [0/7]
:PROPERTIES:
:unnumbered: t
:CUSTOM_ID: new-actions
:END:

+ [ ] QT4CG-082-02: DN to work with NW to come to agreement on the fn:ranks proposal
+ [ ] QT4CG-112-01: JLO to propose a concrete example that uses “.” in a ~%method~s.
+ [ ] QT4CG-116-01: Add a specific error code for unsupported options on doc and doc-available
+ [ ] QT4CG-118-01: MK to make an incorrect type raise an error in #1906
+ [ ] QT4CG-123-01: MK to do the set example in XQuery.
+ [ ] QT4CG-126-01: JLO to add an example where the map:build key function returns multiple keys.

* Administrivia
:PROPERTIES:
:CUSTOM_ID: administrivia
:END:

** Roll call [7/12]
:PROPERTIES:
:CUSTOM_ID: roll-call
:END:

Regrets: BTW, DB, MK

+ [ ] David J Birnbaum (DB)
+ [X] Reece Dunn (RD)
+ [X] Christian Grün (CG)
+ [X] Joel Kalvesmaki (JK) [:05-]
+ [ ] Michael Kay (MK)
+ [X] Juri Leino (JLO)
+ [X] John Lumley (JWL)
+ [ ] Dimitre Novatchev (DN)
+ [X] Wendell Piez (WP)
+ [ ] Ed Porter (EP)
+ [ ] Bethan Tovey-Walsh (BTW)
+ [X] Norm Tovey-Walsh (NW) /Scribe/. /Chair/.

** Accept the agenda
:PROPERTIES:
:CUSTOM_ID: agenda
:END:

Proposal: Accept [[../../agenda/2025/06-24.html][the agenda]].

Accepted.

** Approve minutes of the previous meeting
:PROPERTIES:
:CUSTOM_ID: approve-minutes
:END:

Proposal: Accept [[../../minutes/2025/06-17.html][the minutes of the previous meeting]]. 

Accepted.

** Next meeting
:PROPERTIES:
:CUSTOM_ID: next-meeting
:END:

The next meeting is scheduled for 1 July 2025.

JWL gives regrets for 1 and 8 July.

** Review of open action items [0/5]
:PROPERTIES:
:CUSTOM_ID: open-actions
:END:

(Items marked [X] are believed to have been closed via email before
this agenda was posted.)

+ [ ] QT4CG-082-02: DN to work with NW to come to agreement on the fn:ranks proposal
+ [ ] QT4CG-112-01: JLO to propose a concrete example that uses “.” in a ~%method~s.
+ [ ] QT4CG-116-01: Add a specific error code for unsupported options on doc and doc-available
+ [ ] QT4CG-118-01: MK to make an incorrect type raise an error in #1906
+ [ ] QT4CG-123-01: MK to do the set example in XQuery.

** Review of open pull requests and issues
:PROPERTIES:
:CUSTOM_ID: open-pull-requests
:END:

This section summarizes all of the issues and pull requests that need to be
resolved before we can finish. See [[#technical-agenda][Technical Agenda]] below for the focus of this
meeting.

*** Blocked
:PROPERTIES:
:CUSTOM_ID: blocked
:END:

The following PRs are open but have merge conflicts or comments which
suggest they aren’t ready for action.

+ PR [[https://qt4cg.org/dashboard/#pr-2019][#2019]]: 1776: XSLT template rules for maps and array
+ PR [[https://qt4cg.org/dashboard/#pr-1283][#1283]]: 77b Update expressions
+ PR [[https://qt4cg.org/dashboard/#pr-1062][#1062]]: 150bis revised proposal for fn:ranks

*** Merge without discussion
:PROPERTIES:
:CUSTOM_ID: merge-without-discussion
:END:

The following PRs are editorial, small, or otherwise appeared to be
uncontroversial when the agenda was prepared. The chairs propose that
these can be merged without discussion. If you think discussion is
necessary, please say so.

+ PR [[https://qt4cg.org/dashboard/#pr-2055][#2055]]: 37 Sequence, Array, and Map destructuring

Proposal: merge without discussion.

Accepted.

*** Substantive PRs
:PROPERTIES:
:CUSTOM_ID: substantive
:END:

The following substantive PRs were open when this agenda was prepared.
(Only a few are likely to be discussed at this meeting.)

+ PR [[https://qt4cg.org/dashboard/#pr-2013][#2013]]: 748 Parse functions: consistency
+ PR [[https://qt4cg.org/dashboard/#pr-2049][#2049]]: 2045 Context value can be an empty sequence
+ PR [[https://qt4cg.org/dashboard/#pr-2015][#2015]]: 2009 Avoid constructing document node when it makes no sense
+ PR [[https://qt4cg.org/dashboard/#pr-1942][#1942]]: 37 Support sequence, array, and map destructuring declarations
+ PR [[https://qt4cg.org/dashboard/#pr-2011][#2011]]: 675(part): Add XSLT static typing rules for new kinds of XPath expression
+ PR [[https://qt4cg.org/dashboard/#pr-2014][#2014]]: QT4CG-122-01 Add notes, examples, and rationale for xsl:select
+ PR [[https://qt4cg.org/dashboard/#pr-2019][#2019]]: 1776: XSLT template rules for maps and array
+ PR [[https://qt4cg.org/dashboard/#pr-2031][#2031]]: 2025 JNodes
+ PR [[https://qt4cg.org/dashboard/#pr-2037][#2037]]: 2036 Add rule for streamability of xsl:map
+ PR [[https://qt4cg.org/dashboard/#pr-2043][#2043]]: 2038 Tweak the rules for fn:apply-templates references to modes
+ PR [[https://qt4cg.org/dashboard/#pr-2050][#2050]]: 2040 Fix context value declaration issues

* Technical agenda
:PROPERTIES:
:CUSTOM_ID: technical-agenda
:END:

The following substantive PRs were open when this agenda was prepared.

** PR #2013: 748 Parse functions: consistency
:PROPERTIES:
:CUSTOM_ID: pr-2013
:END:
See PR [[https://qt4cg.org/dashboard/#pr-2013][#2013]]

CG has incorporated most of the feedback from last week.

+ CG: One observation was that we could use ~unparsed-binary~ instead of ~unparsed-text~.
  + … Also, we wanted to have some comments on parsing XML.
  + … Added a reference to the ~fn:doc~ function which has some information about encodings.

Proposal: accept this PR.

Accepted.

** PR #2049: 2045 Context value can be an empty sequence
:PROPERTIES:
:CUSTOM_ID: pr-2049
:END:
See PR [[https://qt4cg.org/dashboard/#pr-2049][#2049]]

CG displays the document for us.

+ NW: this PR changes a half-dozen or so functions to allow the empty sequence.
+ JLO: Generally, I think this fine. I would still like to know the justification.

Some discussion of the consequence of allowing the context value to be a sequence.

+ JWL: In all of these cases, if the context value is an empty sequence, the
  functions return an empty sequence.

That’s correct.

+ WP: When you call it with no argument, you’re still going to default with the
  current context, but that might now be an empty sequence.
+ JWL: The point is that it’s still ~.~ but that can now be an empty sequence.
  Previously, we expected ~.~ to be a singleton.

Observe that the test is for ~node()?~, so you can’t pass a sequence of more
than one item.

Proposal: accept this PR.

Accepted.

** PR #2015: 2009 Avoid constructing document node when it makes no sense
:PROPERTIES:
:CUSTOM_ID: pr-2015
:END:
See PR [[https://qt4cg.org/dashboard/#pr-2015][#2015]]

A quick review of the PR.

+ RD: This is only apply to maps and arrays?

Some discussion of what the result is if the result is a string, instead of a map or array.

(Some fumbling with the result of the diff.)

+ RDL: Does this need to be noted as a breaking change? If a string is returned,
  you won’t get a document node?

+ NW: I think that’s only true if you use ~xsl:select~.

+ JWL: There’s a distinction here between ~xsl:sequence select=…~ and ~xsl:select~.
  + … The way to think of it is that ~xsl:select~ is letting you use a child
    instead of an attribute so that you avoid normalization.

Proposal: accept this PR.

Accepted.

** Issues relating to QName literals
:PROPERTIES:
:CUSTOM_ID: qname-literals
:END:

+ [[https://github.com/qt4cg/qtspecs/issues/2059][Issue 2059]]: Literal QNames: Adaptive serialization
+ [[https://github.com/qt4cg/qtspecs/issues/2058][Issue 2058]]: Literal QNames continued
+ [[https://github.com/qt4cg/qtspecs/issues/2056][Issue 2056]]: Implicit Whitespace in MarkedNCName and QNameLiteral

CG created PRs and the group agreed to discuss them today.

+ CG: The adative serialization method is mostly for debugging, so we can make
  that simpler.

CG reviews PR [[https://qt4cg.org/dashboard/#pr-2060][#2060]].

+ JLO: In the example that you showed, even with an empty namespace there was a #Q{}a
+ CG: Yes, that was my first idea, but we can omit the braces in that case.
+ RD: Can we look at the text without the diff?
+ CG: Yes.
+ JWL: Do we have anywhere else where we’re likely to get a problem with #
  followed by a letter?
  + … We have Q{} or # just followed by a string. What if the name starts with a Q?
+ RD: If it’s not followed by a curly brace then it won’t be a QName.
+ JLO: So it’s easy to tell.
+ JWL: If this is really for debugging and you aren’t going to parse it, I’m not
  sure if using # without the curly braces is actually less confusing.
+ JLO: I’m using adaptive serialization a lot, the distinction is between # and “#”.
  + … There’s no other way to get a # without quotes, so I don’t think there’s a problem.

Proposal: accept this PR.

Accepted.

+ CG: Next we have annotations.

CG reviews PR [[https://qt4cg.org/dashboard/#pr-2061][#2061]].

+ CG: This is XQuery only because it’s annotations; this could be useful for
  RESTXQ. It wouldn’t require parsing strings, you could just supply literals.
+ RD: Another example of this is that you could have a throws annotation that
  specifies the error literal directly as a QName.
+ JLO: I’m completely in favor, but why don’t we allow maps and array literals?
+ NW: That sounds like a separate question.
+ CG: I think the main reason is because its easier to have things that can be
  statically parsed.
  + We avoid using unary here, for example, because we don’t want to allow more
    expressions.

Proposal: accept this PR.

Accepted.

+ CG: Gunther observed that whitespace is not allowed between # and the name.
  + … It has no effect on pragmas, because they require a whitespace.

CG reviews PR [[https://qt4cg.org/dashboard/#pr-2064][#2064]].

(Only the grammar has changed, so there are no diffs.)

+ CG: The change is just removing ~whitespace-spec~ in the production.
+ JWL: Has anyone ever *actually* seen anyone use spaces after ~$~.
+ JLO: It’d be interesting to know how many parsers fail at this point.
+ RD: My IntelliJ plugin has loads of tests for this sort of thing.

Proposal: accept this PR.

Accepted.

The group agrees to look at a few more PRs.

** PR #2065
:PROPERTIES:
:CUSTOM_ID: pr-2065
:END:

See PR [[https://qt4cg.org/dashboard/#pr-2065][#2065]]

+ CG: This is mostly editorial. In ~map:build~, multiple keys is mostly a special case.
  + … This PR also removes the ability for simplicity.
+ RD: Not related to this, but it might be easier to read if the elements in the
  sygnature table are allowed at the top.
+ NW: Yes, make an issue and assign it to me, please.
+ JWL: We have decided not to support any idea of a sequence value for a key. Is that right?
+ CG: That’s right.
+ JLO: The function that produces the key is still ~xs:anyAtomicType*~
+ CG: The function isn’t changing, just removing the plural.

Some discussion of what happens when the key is an empty sequence; no entry is created.

+ JLO: Are there any examples of multiple keys?
+ CG: Apparently not.

ACTION QT4CG-126-01: JLO to add an example where the map:build key function returns multiple keys.

Proposal: accept this PR.

Accepted.

** PR #2062
:PROPERTIES:
:CUSTOM_ID: pr-2062
:END:

See PR [[https://qt4cg.org/dashboard/#pr-2062][#2062]]

+ CG: The ~fn:sort-by~ function allowed you to omit the second argument. It
  looks a bit lost to have sort by with out any sort key. My suggestion is to
  make it manditory, even if it can be the empty sequence.
+ NW: Seems reasonable to me.

Proposal: accept this PR.

Accepted.

** Steps: variable element names, issue #2057
:PROPERTIES:
:CUSTOM_ID: h-E0E86275-C41A-4199-A786-ECFB368F7E8B
:END:

CG introduces the issue.

+ CG: I haven’t checked all the details yet, so this is just a suggestion.
+ JWL: This is what I was asking MK about with JNodes.
  + … I asked could you do a similar thing on normal nodes.
  + … He implied that this was a lot more problematic, I’d like to hear his opinion.
  + … I *like* it, it would be an easy dynamic mechanism for putting them in expressions.
+ CG: I think we about ~$node/$name~ and that definitely won’t work.
  + … But I think adding ~element()~ would work.
+ JLO: I didn’t know that you can do ~$node/$name~.

Some discussion of what that currently means!

+ JK: I’d like some feedback on my #2051 if anyone can take a look.

* Any other business
:PROPERTIES:
:CUSTOM_ID: any-other-business
:END:

None heard.

* Adjourned
:PROPERTIES:
:CUSTOM_ID: adjourned
:END:
