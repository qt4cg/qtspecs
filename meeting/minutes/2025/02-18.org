:PROPERTIES:
:ID:       5B580201-2917-4D8C-BF75-74558D615576
:END:
#+title: QT4 CG Meeting 110 Minutes 2025-02-18
#+author: Norm Tovey-Walsh
#+filetags: :qt4cg:
#+options: html-style:nil h:6 toc:nil
#+html_head: <link rel="stylesheet" type="text/css" href="/meeting/css/htmlize.css"/>
#+html_head: <link rel="stylesheet" type="text/css" href="../../../css/style.css"/>
#+html_head: <link rel="shortcut icon" href="/img/QT4-64.png" />
#+html_head: <link rel="apple-touch-icon" sizes="64x64" href="/img/QT4-64.png" type="image/png" />
#+html_head: <link rel="apple-touch-icon" sizes="76x76" href="/img/QT4-76.png" type="image/png" />
#+html_head: <link rel="apple-touch-icon" sizes="120x120" href="/img/QT4-120.png" type="image/png" />
#+html_head: <link rel="apple-touch-icon" sizes="152x152" href="/img/QT4-152.png" type="image/png" />
#+options: author:nil email:nil creator:nil timestamp:nil
#+startup: showall

[[../][Meeting index]] / [[https://qt4cg.org][QT4CG.org]] / [[https://qt4cg.org/dashboard][Dashboard]] / [[https://github.com/qt4cg/qtspecs/issues][GH Issues]] / [[https://github.com/qt4cg/qtspecs/pulls][GH Pull Requests]]

#+TOC: headlines 6

* Minutes
:PROPERTIES:
:unnumbered: t
:CUSTOM_ID: minutes
:END:

Approved [[../2025/02-25.html][at meeting 111]] on 25 February 2025.

* Summary of new and continuing actions [0/10]
:PROPERTIES:
:unnumbered: t
:CUSTOM_ID: new-actions
:END:

+ [ ] QT4CG-082-02: DN to work with MK to come to agreement on the fn:ranks proposal
+ [ ] QT4CG-097-02: MK to make the XSD schema component references into links to XSD
+ [ ] QT4CG-107-05: JLO and DN to consider a proposal for system defined records.
+ [ ] QT4CG-110-01: MK to fix the incorrect termrefs in the data model the merge the PR.
+ [ ] QT4CG-110-02: MK to review the error pointed out in one of the examples for arrow expressions and then merge
+ [ ] QT4CG-110-03: JWL to consider writing a PR for issue #322, xsl:record instruction
+ [ ] QT4CG-110-04: JK to consider a PR for #366, xsl:use-package with xsl:package-location

* Administrivia
:PROPERTIES:
:CUSTOM_ID: administrivia
:END:

** Roll call [9/13]
:PROPERTIES:
:CUSTOM_ID: roll-call
:END:

Regrets: CG, BTW, SF, JLO

+ [X] David J Birnbaum (DB)
+ [X] Reece Dunn (RD)
+ [ ] Sasha Firsov (SF)
+ [ ] Christian Grün (CG)
+ [X] Joel Kalvesmaki (JK)
+ [X] Michael Kay (MK)
+ [ ] Juri Leino (JLO)
+ [X] John Lumley (JWL)
+ [X] Dimitre Novatchev (DN)
+ [X] Wendell Piez (WP)
+ [X] Ed Porter (EP)
+ [ ] Bethan Tovey-Walsh (BTW)
+ [X] Norm Tovey-Walsh (NW). /Scribe/. /Chair/.

** Accept the agenda
:PROPERTIES:
:CUSTOM_ID: agenda
:END:

Proposal: Accept [[../../agenda/2025/02-18.html][the agenda]].

Accepted.

*** Status so far…
:PROPERTIES:
:CUSTOM_ID: so-far
:END:

These charts have been adjusted so they reflect the preceding six months of work.

#+CAPTION: “Burn down” chart on open issues
#+NAME:   fig:open-issues
[[./issues-open-2025-02-18.png]]

#+CAPTION: Open issues by specification
#+NAME:   fig:open-issues-by-spec
[[./issues-by-spec-2025-02-18.png]]

#+CAPTION: Open issues by type
#+NAME:   fig:open-issues-by-type
[[./issues-by-type-2025-02-18.png]]

** Approve minutes of the previous meeting
:PROPERTIES:
:CUSTOM_ID: approve-minutes
:END:

Proposal: Accept [[../../minutes/2025/02-11.html][the minutes of the previous meeting]].

Accepted.

** Next meeting
:PROPERTIES:
:CUSTOM_ID: next-meeting
:END:

The next meeting is planned for 25 February 2025.

** Review of open action items [3/6]
:PROPERTIES:
:CUSTOM_ID: open-actions
:END:

(Items marked [X] are believed to have been closed via email before
this agenda was posted.)

+ [ ] QT4CG-082-02: DN to work with MK to come to agreement on the fn:ranks proposal
+ [ ] QT4CG-097-02: MK to make the XSD schema component references into links to XSD
+ [X] QT4CG-107-01: MK to amend PR 1722 so the expansion of focus functions includes the return type ~item()*~
+ [ ] QT4CG-107-05: JLO and DN to consider a proposal for system defined records.
+ [X] QT4CG-109-01: NW add JSON to the processing model diagrams along side XML
+ [X] QT4CG-109-02: NW to look again at adding tooltips to the diagrams

** Review of open pull requests and issues
:PROPERTIES:
:CUSTOM_ID: open-pull-requests
:END:

*** Blocked
:PROPERTIES:
:CUSTOM_ID: blocked
:END:

The following PRs are open but have merge conflicts or comments which
suggest they aren’t ready for action.

+ PR [[https://qt4cg.org/dashboard/#pr-1587][#1587]]: 557 Add fn:binary-resource
+ PR [[https://qt4cg.org/dashboard/#pr-1296][#1296]]: 982 Rewrite of scan-left and scan-right
+ PR [[https://qt4cg.org/dashboard/#pr-1283][#1283]]: 77b Update expressions
+ PR [[https://qt4cg.org/dashboard/#pr-1062][#1062]]: 150bis revised proposal for fn:ranks
+ PR [[https://qt4cg.org/dashboard/#pr-1227][#1227]]: 150 PR resubmission for fn ranks

*** Merge without discussion
:PROPERTIES:
:CUSTOM_ID: merge-without-discussion
:END:

The following PRs are editorial, small, or otherwise appeared to be
uncontroversial when the agenda was prepared. The chairs propose that
these can be merged without discussion. If you think discussion is
necessary, please say so.

+ PR [[https://qt4cg.org/dashboard/#pr-1810][#1810]]: 1808 Add -> to list of tokens using lt and gt characters
+ PR [[https://qt4cg.org/dashboard/#pr-1809][#1809]]: 1807 Two exceptions to the rule, not three
+ PR [[https://qt4cg.org/dashboard/#pr-1806][#1806]]: 1805 Drop middle dots from termref rendition in F+O
+ PR [[https://qt4cg.org/dashboard/#pr-1804][#1804]]: Drop "(Non-Normative)" from ToC
+ PR [[https://qt4cg.org/dashboard/#pr-1802][#1802]]: 1785 Fix two simple grammar bugs
+ PR [[https://qt4cg.org/dashboard/#pr-1790][#1790]]: 1788 Replace statement that maps are unordered
+ PR [[https://qt4cg.org/dashboard/#pr-1769][#1769]]: Add links from processing model diagrams

Proposal: merge without discussion.

Accepted.

*** Close without action
:PROPERTIES:
:CUSTOM_ID: close-without-action
:END:

It has been proposed that the following issues be closed without action.
If you think discussion is necessary, please say so.

+ Issue [[https://github.com/qt4cg/qtspecs/issues/119][#119]]: Allow a map's key value to be any sequence
+ Issue [[https://qt4cg.org/dashboard/#pr-1631][#1631]]: xsl:apply-templates (without select) should allow inline content

Proposal: close without further action.

Accepted.

*** Substantive PRs
:PROPERTIES:
:CUSTOM_ID: substantive
:END:

The following substantive PRs were open when this agenda was prepared.
(See below for the PRs that we plan to discuss.)

+ PR [[https://qt4cg.org/dashboard/#pr-1801][#1801]]: Function fn:function-identity
+ PR [[https://qt4cg.org/dashboard/#pr-1791][#1791]]: 1789 Fix singleton terminology
+ PR [[https://qt4cg.org/dashboard/#pr-1778][#1778]]: 1456 Lookup expressions filtered by type
+ PR [[https://qt4cg.org/dashboard/#pr-1766][#1766]]: 1715 Drop array bound checking
+ PR [[https://qt4cg.org/dashboard/#pr-1763][#1763]]: 1716 Generalize syntax of arrow expressions
+ PR [[https://qt4cg.org/dashboard/#pr-1740][#1740]]: 1725b Further elaboration of duplicates handling in maps
+ PR [[https://qt4cg.org/dashboard/#pr-1735][#1735]]: 1341 Drop $position callback from many functions

* Technical agenda
:PROPERTIES:
:CUSTOM_ID: technical-agenda
:END:

** PR #1791: 1789 Fix singleton terminology
:PROPERTIES:
:CUSTOM_ID: pr-1791
:END:
See PR [[https://qt4cg.org/dashboard/#pr-1791][#1791]].

+ MK: There’s a typo in the data model that I need to fix; some of the termrefs
  are expanded incorrectly.
+ MK: Briefly: we use single-entry map and single-entry array instead of
  “singleton” to avoid confusion.
+ JWL: Do we need to be able to describe “optional singleton”?
+ MK: I didn’t see that.

Proposal: accept this PR.

Accepted.

ACTION: QT4CG-110-01: MK to fix the incorrect termrefs in the data model the merge the PR.

** PR #1766: 1715 Drop array bound checking
:PROPERTIES:
:CUSTOM_ID: pr-1766
:END:
See PR [[https://qt4cg.org/dashboard/#pr-1766][#1766]].

+ MK: This takes the fairly radical approach that you no longer get an error if
  the array bounds are out-of-bounds, you get an empty sequence.
  + … If adds a new function ~array:get-if-present~ that raises an error.
  + … This was necessary because deep lookup fails all over the place if you do
    bounds checking. And it’s consistent with what we do elsewhere, with maps
    for example.
+ NW: CG asked me to remind us of his comment that head() and other functions
  should have consistent behavior.
+ MK: I think I agree, but I was hesitant to take it that far.
+ DN: Is my understanding correct that this turning off of array bounds checking is permanent.
+ MK: Yes, there’s no switch or mode for it. There’s a function that does array
  lookup with bounds checking.
+ DN: What about an existing application that relies on bounds checking and uses try/catch?
+ MK: Those will break. That’s why I introduced this as something that users
  might not be comfortable with.
+ DN: I think we should have a switch for this. And do I understand that an empty sequence is returned?
+ MK: Yes.
+ DN: That seems very wrong to me; an empty sequence is a completely valid return value.
+ MK: It makes it consistent with maps where the same ambiguity exists. If you
  need to disambiguate, you have to make an extra test.
+ DN: We should consider the alternative where we can turn this checking on or off. Otherwise,
  I won’t know what to expect when I get an empty sequence as a result.
+ JWL: Are there any grounds for doing a similar thing on the binary accessor
  functions? We do the equivalent of bounds checking there.
+ MK: I hadn’t considered that.
+ JWL: Might be worth considering for consistency.
+ RD: I found a global mechanism like a declare statement in XQuery to be
  problematic with respect to a feature. In an import chain, you can end up with
  one module that wants one behavior and another module that wants different
  behavior. Or you can get unexpected behavior because a parent model declares a
  particular behavior. In MarkLogic, this presents itself as a problem with
  feature extensions.
+ MK: Yes, and context switches make some things harder like function inlining.
+ DB: Doesn’t the new ~array:get-if-present~ provide an opportunity to build the
  switching into the code instead of an instruction?
+ MK: Unfortunately, it doesn’t handle all cases, like a deep lookup for example. Or direct subscripting.
+ WP: Practically, what is the impact and can we know? Are there people who
  would be impacted, or is it a small constituency that could easily adapt.
+ MK: We know so little about the broader user community is that it’s hard to tell.
+ WP: Can we ask? This seems like a good idea, except for this issue.
+ MK: Assessing the impact of change on the user community is something we have
  no way of quantifying. But it’s often larger than you imagine.
  + … In some ways, it’s not that it will cost a lot of money, it’s that they
    won’t move forward if they’ve heard bad stories.
+ DN: Two things: if we approve this, we will be destroying backward
  compatibility. And with respect to the user community, we don’t know how long
  users will continue to use version 3 and they will be disappointed when they
  try to switch. I’m very much opposed to this.
  + … I think the right way is to allow users to turn this feature on and off.
    That’s how C# does it. We should look at what other languages do.
  + … We have several ways to access arrays; maybe we could make array bounds
    checking apply to some, not others. Or we could add a new operator.
+ JWL: CG remarked that he went through his entire code base and found no
  examples of anyone checking for that error.
+ MK: There’s even an incompatibility without the try/catch, users might be
  relying on the bounds checking to abort their query.
+ DN: This reminds me of a proposal I made a few years ago for maps: the ability
  to specify what value or behavior should be returned or occur if the bounds is
  out of range.
+ MK: Yes, except that when you get arrays by parsing JSON, it’s hard to know
  where to put that function.
+ DN: Who cares about JSON, we’re talking about XPath.
+ RD: The parse JSON case doesn’t matter because that’s serializing the JSON
  into an array. It’s not accessing the element of the array.
+ MK: Yes, but if the array has a property that says what it’s default value
  is, where would you get it from?

Some discussion of a context switch.

+ DB: As I look at the proposal, it looks as if we’d be changing the behavior of
  ~array:get~ and adding a new function. Would adding ~array:get-or-else~ work?
+ MK: The big problems are using an array as a function and the lookup operator.
  The problem really arises when your working on a lot of arrays. You don’t want
  to look at them programmatically. In a deep lookup, you just want ignore the
  things that aren’t there.
  + … It’s very messy if you write an expression that involves both deep and
    shallow lookup.
+ RD: The fallback on ~array:get~ does that, so what value would this proposal add?
  + … In the places where we don’t have a fallback, we should add one for
    consistency. And then we remain backwards compatible.
+ MK: I think that fallback option is very unsatisfactory because it bloats your
  code if you have to put it in everytime you want to use a method.
+ DN: I think that what RD says is a good possibility. We could also have
  something (a function or notation) that says we’re doing a deep lookup that
  automatically turns off bounds checking. Or maybe for this case, to be able to
  specify the default value that’s returned if the index or key is not present.
  + … I agree with MK that we need to consider the options.

Leaving this open    

** PR #1763: 1716 Generalize syntax of arrow expressions
:PROPERTIES:
:CUSTOM_ID: pr-1763
:END:
See PR [[https://qt4cg.org/dashboard/#pr-1763][#1763]].

+ MK: This was an idea of Gunther Rademacher’s and I’m amazed it works.

MK reviews the grammar changes.

+ MK: Basically, you can have any dynamic function call on the right hand side
  of the arrow. Mostly this deletes code which must be a good thing.
+ RD: Which dynamic function calls does this allow?
+ MK: Any. Any dynamic function call.
+ RD: I mean compared to the old behavior.
+ MK: In the past it had to be a variable reference or an expression in
  parenthesis or an inline function.
  + … I think you could write any dynamic function call provided you put it in brackets.
+ RD: We now have any postfix expression.
+ DN: I think we should add an example of something that was not previously allowed.
+ JWL: So we have three arrows.

Proposal: accept this PR.

Accepted.

ACTION: QT4CG-110-02: MK to review the error pointed out in one of the examples for arrow expressions and then merge

** Issue triage
:PROPERTIES:
:CUSTOM_ID: issue-triage
:END:

The plan this week was to focus on open XSLT issues that had not been triaged.
Since there are no such issues this week, I’ve put the ‘optional’ ones back on
the list. There was a request to review several these again.

For this week, please focus your attention on these issues:

*** Issue [[https://github.com/qt4cg/qtspecs/issues/322][#322]]: Map construction in XSLT: xsl:record instruction
:PROPERTIES:
:CUSTOM_ID: h-0664C228-A723-42E4-95F8-CAABF24CA041
:END:

+ MK: It’s a nice to have.
+ JWL: Is it easy? Is it just a source level transformation?
+ MK: Yes, I think it’s just more concise syntax for something you can already do.
+ RD: What you’re doing is mapping the third code block into the first.
+ MK: There are a few decisions to be made about what to do with namespaced
  attributes and such. But it’s not difficult.

Leave it optional.

ACTION: QT4CG-110-03: JWL to consider writing a PR for issue #322

*** Issue [[https://github.com/qt4cg/qtspecs/issues/323][#323]]: add select attribute to xsl:text
:PROPERTIES:
:CUSTOM_ID: h-9D109EB1-D2B9-465C-9D6E-D66E04ABD37F
:END:

+ JK: If there’s a category between “optional” and “required”, I’d put it there.
+ MK: Yes, but it’s very, very hard to get rid of perceptions and habits that
  have been around for twenty years. It’s hard to provide a new feature that
  will change community habits.
+ WP: This doesn’t force anyone to change?
  + … Liam’s observation was that people do this by mistake and get into trouble.
+ JWL: Shall we make it required?
+ MK: I think it doesn’t rise to that level.

Leave it optional.

*** Issue [[https://github.com/qt4cg/qtspecs/issues/366][#366]]: Support xsl:use-package with xsl:package-location
:PROPERTIES:
:CUSTOM_ID: h-B3100951-4B76-4D09-A0CE-51F242F5B901
:END:

+ MK: I think this comes close to being required. People are having a lot of
  trouble using packages without this feature. You can’t use packages in some
  APIs because there’s no where in those APIs to provide that information.
  + … The aim was to make the stylesheets *not* location dependent, but that’s
    also problematic.

Leave it optional.

ACTION: QT4CG-110-04: JK to consider a PR for #366, xsl:use-package with xsl:package-location

*** Issue [[https://github.com/qt4cg/qtspecs/issues/451][#451]]: Multiple Schemas
:PROPERTIES:
:CUSTOM_ID: h-FE6D972A-FFE4-4BBF-A56F-4D1E0E8E6D3A
:END:

+ MK: I think this is a nice-to-have. You can’t write a transformation that
  transforms from one schema to another where you validate the input and output
  against the schemas.
  + … I have all the ideas in my head, but it needs a bit of work.

Leave it optional.

*** Issue [[https://github.com/qt4cg/qtspecs/issues/714][#714]]: Function annotations in XSLT
:PROPERTIES:
:CUSTOM_ID: h-4E040A83-065C-4108-8910-F4158014C775
:END:

+ MK: There’s an issue on annotations that they’re only half-baked. We could do
  better.
+ JK: I’d say that because function annotations are a new feature of 4.0 XPath,
  I think this should be required.

Make it required.

* Any other business
:PROPERTIES:
:CUSTOM_ID: any-other-business
:END:

None heard.

* Adjourned
:PROPERTIES:
:CUSTOM_ID: adjourned
:END:


